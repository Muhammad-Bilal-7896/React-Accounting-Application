[{"E:\\Upwork Projects Clients\\Inter-Nationalization-in-React\\src\\index.js":"1","E:\\Upwork Projects Clients\\Inter-Nationalization-in-React\\src\\App.js":"2","E:\\Upwork Projects Clients\\Inter-Nationalization-in-React\\src\\i18n.js":"3","E:\\Upwork Projects Clients\\Inter-Nationalization-in-React\\src\\config\\router.js":"4","E:\\Upwork Projects Clients\\Inter-Nationalization-in-React\\src\\Pages\\Home\\index.jsx":"5","E:\\Upwork Projects Clients\\Inter-Nationalization-in-React\\src\\Components\\Header\\index.jsx":"6","E:\\Upwork Projects Clients\\Inter-Nationalization-in-React\\src\\Components\\NavHeader\\index.jsx":"7","E:\\Upwork Projects Clients\\Inter-Nationalization-in-React\\src\\Pages\\About\\index.jsx":"8","E:\\Upwork Projects Clients\\Inter-Nationalization-in-React\\src\\firebase\\index.js":"9","E:\\Upwork Projects Clients\\Inter-Nationalization-in-React\\src\\Components\\FirebaseData\\index.jsx":"10","E:\\Upwork Projects Clients\\Bashir Aziz\\React Accounting Project\\src\\index.js":"11","E:\\Upwork Projects Clients\\Bashir Aziz\\React Accounting Project\\src\\App.js":"12","E:\\Upwork Projects Clients\\Bashir Aziz\\React Accounting Project\\src\\config\\router.js":"13","E:\\Upwork Projects Clients\\Bashir Aziz\\React Accounting Project\\src\\Pages\\Home\\index.jsx":"14","E:\\Upwork Projects Clients\\Bashir Aziz\\React Accounting Project\\src\\Pages\\About\\index.jsx":"15","E:\\Upwork Projects Clients\\Bashir Aziz\\React Accounting Project\\src\\firebase\\index.js":"16","E:\\Upwork Projects Clients\\Bashir Aziz\\React Accounting Project\\src\\Components\\Header\\index.jsx":"17","E:\\Upwork Projects Clients\\Bashir Aziz\\React Accounting Project\\src\\Components\\NavHeader\\index.jsx":"18","E:\\Upwork Projects Clients\\Bashir Aziz\\React Accounting Project\\src\\Pages\\Actual\\index.jsx":"19"},{"size":268,"mtime":1632167824920,"results":"20","hashOfConfig":"21"},{"size":181,"mtime":1630221857446,"results":"22","hashOfConfig":"21"},{"size":3319,"mtime":1632685533805,"results":"23","hashOfConfig":"21"},{"size":2631,"mtime":1632777690438,"results":"24","hashOfConfig":"21"},{"size":19122,"mtime":1632777972754,"results":"25","hashOfConfig":"21"},{"size":1645,"mtime":1632778249691,"results":"26","hashOfConfig":"21"},{"size":1114,"mtime":1632320406087,"results":"27","hashOfConfig":"21"},{"size":3816,"mtime":1632778089382,"results":"28","hashOfConfig":"21"},{"size":1098,"mtime":1632601859351,"results":"29","hashOfConfig":"21"},{"size":2416,"mtime":1632664949295,"results":"30","hashOfConfig":"21"},{"size":207,"mtime":1632872436612,"results":"31","hashOfConfig":"32"},{"size":181,"mtime":1630221857446,"results":"33","hashOfConfig":"32"},{"size":463,"mtime":1633458746088,"results":"34","hashOfConfig":"32"},{"size":24872,"mtime":1633458498057,"results":"35","hashOfConfig":"32"},{"size":1145,"mtime":1632878827498,"results":"36","hashOfConfig":"32"},{"size":1098,"mtime":1632601859351,"results":"37","hashOfConfig":"32"},{"size":1374,"mtime":1632969263287,"results":"38","hashOfConfig":"32"},{"size":662,"mtime":1632878752520,"results":"39","hashOfConfig":"32"},{"size":43590,"mtime":1634128547382,"results":"40","hashOfConfig":"32"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"mqewgr",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"trff2q",{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},"E:\\Upwork Projects Clients\\Inter-Nationalization-in-React\\src\\index.js",[],["89","90"],"E:\\Upwork Projects Clients\\Inter-Nationalization-in-React\\src\\App.js",[],"E:\\Upwork Projects Clients\\Inter-Nationalization-in-React\\src\\i18n.js",["91"],"import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n//Importing Firebase \r\n/////////////////////////////////////\r\n// import firebase from 'firebase';\r\n// import 'firebase/firestore';\r\n// import { query, orderBy } from \"firebase/firestore\";\r\n// import 'firebase/auth';\r\n//import { FirebaseData,getData } from './Components/FirebaseData';\r\n//////////////////////////////////////\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n//Importing Languages\r\nimport English from './LanguageJsonFiles/en';\r\nimport Germany from './LanguageJsonFiles/de';\r\nimport Chinese from './LanguageJsonFiles/chi';\r\nimport Arabic from './LanguageJsonFiles/ar';\r\n\r\nconst convertArrayToObject = (array, key) => {\r\n    const initialValue = {};\r\n    return array.reduce((obj, item) => {\r\n        return {\r\n            ...obj,\r\n            [item.translation.description.short_name]: item,\r\n        };\r\n    }, initialValue);\r\n};\r\n\r\n// const fun = () => {\r\n//     var arr = {};\r\n\r\n//     //Resources Object\r\n//     const Resources = {\r\n//         en: English,\r\n//         de: Germany,\r\n//         chi: Chinese,\r\n//         ar: Arabic\r\n//     }\r\n\r\n//     //////////////////////////////////////////////////////////////////////////////////////////Retreiving firebase data from web\r\n//     // Now retreiving the data\r\n//     //////////////////////////////Here all data retreiving is working////////////////////////////\r\n//     // const db = firebase.firestore();\r\n//     // //Data Retreiving for Auth\r\n//     // db.collection(`Languages`)\r\n//     //     .get()\r\n//     //     .then(snapshot => {\r\n//     //         let data = [];\r\n//     //         snapshot.forEach(element => {\r\n//     //             data.push(Object.assign({\r\n//     //                 \"id\": element.id,\r\n//     //                 \"translation\": element.translation\r\n//     //             }, element.data()))\r\n//     //         })\r\n\r\n//     //         const language_array = [];\r\n\r\n//     //         for (let i = 0; i < data.length; i++) {\r\n//     //             //console.log(data[i].translation.description.short_name);\r\n//     //             let language_label = data[i].translation.description.short_name;\r\n//     //             language_array.push(language_label);\r\n//     //         }\r\n//     //         console.log(language_array);\r\n\r\n//     //         arr = convertArrayToObject(data, 1);\r\n//     //     })\r\n\r\n//     //console.log(`data for current selected user `,FirebaseData());\r\n//     //////////////////////////////////////////////////////////////////////////////////////////Retreiving firebase data from web\r\n//     //Resources Object\r\n//     return Resources;\r\n// }\r\n\r\nlet data = {\r\n    en: English,\r\n    de: Germany,\r\n    chi: Chinese,\r\n    ar: Arabic\r\n};\r\n\r\ni18n\r\n    // detect user language\r\n    // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n    .use(LanguageDetector)\r\n    // pass the i18n instance to react-i18next.\r\n    .use(initReactI18next)\r\n    // init i18next\r\n    // for all options read: https://www.i18next.com/overview/configuration-options\r\n    .init({\r\n        debug: true,\r\n        fallbackLng: 'en',\r\n        interpolation: {\r\n            escapeValue: false, // not needed for react as it escapes by default\r\n        },\r\n        resources: data\r\n    });\r\n\r\nexport default i18n;","E:\\Upwork Projects Clients\\Inter-Nationalization-in-React\\src\\config\\router.js",["92","93","94","95","96","97"],"E:\\Upwork Projects Clients\\Inter-Nationalization-in-React\\src\\Pages\\Home\\index.jsx",["98","99","100","101","102","103","104"],"E:\\Upwork Projects Clients\\Inter-Nationalization-in-React\\src\\Components\\Header\\index.jsx",["105","106","107","108"],"E:\\Upwork Projects Clients\\Inter-Nationalization-in-React\\src\\Components\\NavHeader\\index.jsx",["109","110","111","112","113"],"import React from \"react\";\r\nimport i18n from \"../../i18n\";\r\n//Importing useTranslation and Trans from react-i18next\r\nimport { useTranslation, Trans } from 'react-i18next';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport \"./style.scss\";\r\n\r\nconst lngs = {\r\n    en: { nativeName: 'English' },\r\n    de: { nativeName: 'Deutsch' },\r\n    chi: { nativeName: 'Chinese' },\r\n    ar: { nativeName: 'Arabic' }\r\n};\r\n\r\nconst Arrow = () => {\r\n    return (\r\n        <i className=\"RightArrow fas fa-chevron-right\"></i>\r\n    )\r\n}\r\n\r\nconst NavHeader = (props) => {\r\n    const { t } = useTranslation();\r\n    const history = useHistory();\r\n\r\n    const MoveTo = (path) => {\r\n        // alert(path)\r\n        history.push(`${path}`)\r\n    }\r\n    return (\r\n        <>\r\n            {/* As a heading */}\r\n            <nav className={`NavHeader1`}>\r\n                <div className=\"navTextDiv container-fluid\">\r\n                    <span onClick={() => MoveTo(`/`)} className=\"navheader-text mb-0\"> {t('description.head')}</span>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\nexport default NavHeader;","E:\\Upwork Projects Clients\\Inter-Nationalization-in-React\\src\\Pages\\About\\index.jsx",["114","115","116"],"E:\\Upwork Projects Clients\\Inter-Nationalization-in-React\\src\\firebase\\index.js",[],"E:\\Upwork Projects Clients\\Inter-Nationalization-in-React\\src\\Components\\FirebaseData\\index.jsx",["117","118","119","120","121","122","123","124","125","126","127"],"E:\\Upwork Projects Clients\\Bashir Aziz\\React Accounting Project\\src\\index.js",[],["128","129"],"E:\\Upwork Projects Clients\\Bashir Aziz\\React Accounting Project\\src\\App.js",[],"E:\\Upwork Projects Clients\\Bashir Aziz\\React Accounting Project\\src\\config\\router.js",["130","131","132","133"],"import React, { useState, useEffect } from \"react\"\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport Home from '../Pages/Home';\r\nimport About from \"../Pages/About\";\r\nimport Actual from \"../Pages/Actual\";\r\n\r\nfunction AppRouter() {\r\n\r\n    return (\r\n        <Router>\r\n            <Route exact path=\"/\" component={Actual} />\r\n            <Route exact path=\"/v2\" component={Actual} />\r\n        </Router>\r\n    )\r\n}\r\nexport default AppRouter;","E:\\Upwork Projects Clients\\Bashir Aziz\\React Accounting Project\\src\\Pages\\Home\\index.jsx",["134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155"],"import React, { useEffect, useState } from \"react\";\r\nimport Header from \"../../Components/Header\";\r\nimport NavHheader from \"../../Components/NavHeader\";\r\n//Setting the use history hook\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\n\r\n//Importing Firebase \r\nimport firebase from \"../../firebase\";\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Home = () => {\r\n    const [availableOptions, setAvailableOptions] = useState(['Cash - Operating Account',\r\n        'Cash - Payroll Account',\r\n        'Cash - Money Market Account',\r\n        'Cash - User Defined1',\r\n        'Cash - User Defined2',\r\n        'Cash - User Defined3',\r\n        'Cash - Petty Cash']);\r\n    const [currentOption, setCurrentOption] = useState(\"\");\r\n    const [option, setOption] = useState(\"\");\r\n\r\n    //The debit state\r\n    const [debit, setDebit] = useState(0);\r\n    const [credit, setCredit] = useState(0);\r\n\r\n    //Available Debits\r\n    const [availableDebits, setAvailableDebits] = useState([]);\r\n    const [availableCredits, setAvailableCredits] = useState([]);\r\n\r\n    const history = useHistory();\r\n    // const location = useLocation();\r\n    // const { pathname } = location;\r\n    useEffect(() => {\r\n\r\n        //////////////////////////////////////////////////////////////////////////////////////////Retreiving firebase data from web\r\n        // Now retreiving the data\r\n        //////////////////////////////Here all data retreiving is working////////////////////////////\r\n        // const db = firebase.firestore();\r\n        // //Data Retreiving for Auth\r\n        // db.collection(`Languages`)\r\n        //     .get()\r\n        //     .then(snapshot => {\r\n        //         let data = [];\r\n        //         snapshot.forEach(element => {\r\n        //             data.push(Object.assign({\r\n        //                 \"id\": element.id,\r\n        //                 \"translation\": element.translation\r\n        //             }, element.data()))\r\n        //         })\r\n\r\n        //         const language_array = [];\r\n\r\n        //         for (let i = 0; i < data.length; i++) {\r\n        //             //console.log(data[i].translation.description.short_name);\r\n        //             let language_label = data[i].translation.description.short_name;\r\n        //             language_array.push(language_label);\r\n        //         }\r\n        //         console.log(language_array);\r\n        //         console.log(`data for current selected user `, convertArrayToObject(data, 1));\r\n        //     })\r\n        //////////////////////////////////////////////////////////////////////////////////////////Retreiving firebase data from web\r\n    })\r\n\r\n    const pushAvailableOptions = () => {\r\n        //Either I have to insert the new element or not.I will check if already a option present it cant be inserted again.\r\n        let insert = true;\r\n        for (let i = 0; i < availableOptions.length; i++) {\r\n            if (option == availableOptions[i]) {\r\n                insert = false;\r\n                break;\r\n            }\r\n        }\r\n        if (!insert) {\r\n            alert(`Please insert a Unique Value. '${option}' is already present.`);\r\n        }\r\n        if (option != \"\" && insert == true) {\r\n            setAvailableOptions([...availableOptions, option]);\r\n            setOption(\"\");\r\n        }\r\n        if (option == \"\") {\r\n            alert(\"Please enter any text to submit!\");\r\n        }\r\n    }\r\n\r\n    const pushAvailableDebits = () => {\r\n        if (debit != 0 && currentOption != \"\") {\r\n            let obj = {\r\n                selectedOption: currentOption,\r\n                Debit: debit\r\n            }\r\n            setAvailableDebits([...availableDebits, obj]);\r\n            setDebit(0);\r\n        }\r\n        if (debit == 0) {\r\n            alert(\"Please enter any debit value to submit!\");\r\n        }\r\n        if (currentOption == \"\") {\r\n            alert(\"Please select an option also from the above drop down to submit debit value.\")\r\n        }\r\n    }\r\n\r\n    const pushAvailableCredits = () => {\r\n        if (credit != 0 && currentOption != \"\") {\r\n            let obj = {\r\n                selectedOption: currentOption,\r\n                Credit: credit\r\n            }\r\n            setAvailableCredits([...availableCredits, obj]);\r\n            setCredit(0);\r\n        }\r\n        if (credit == 0) {\r\n            alert(\"Please enter any Credit value to submit!\");\r\n        }\r\n        if (currentOption == \"\") {\r\n            alert(\"Please select an option also from the above drop down to submit Credit value.\")\r\n        }\r\n    }\r\n\r\n    function arrayRemove(arr, value) {\r\n        return arr.filter(function (ele) {\r\n            return ele != value;\r\n        });\r\n    }\r\n\r\n    const deleteItem = (key) => {\r\n        // alert(key);\r\n        let arr = availableOptions;\r\n        //arr.splice(key, 1);\r\n        let value = arr[key];\r\n        //setAvailableOptions([]);\r\n        //const new_arr = arr;\r\n        var result = arrayRemove(arr, value);\r\n        console.log(\"Available Options is : \", result);\r\n        setAvailableOptions(result);\r\n        // if (window.confirm(`Are you sure you want to delete the element ${availableOptions[key]} at number ${key + 1}`)) {\r\n        //     condition = true;\r\n        //     console.log(\"Available Options is : \", arr);\r\n        // } else {\r\n        //     console.log(\"User canceled deletion!\");\r\n        // }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <NavHheader />\r\n            <hr />\r\n            <div className=\"container-own\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                        {/* Tab navs */}\r\n                        <div className=\"nav flex-column nav-tabs text-center\" id=\"v-tabs-tab\" role=\"tablist\" aria-orientation=\"vertical\">\r\n                            <a className=\"nav-link active\" id=\"v-tabs-home-tab\" data-mdb-toggle=\"tab\" href=\"#v-tabs-home\" role=\"tab\" aria-controls=\"v-tabs-home\" aria-selected=\"true\">Add Values</a>\r\n                            <a className=\"nav-link\" id=\"v-tabs-profile-tab\" data-mdb-toggle=\"tab\" href=\"#v-tabs-profile\" role=\"tab\" aria-controls=\"v-tabs-profile\" aria-selected=\"false\">Caclulate</a>\r\n                        </div>\r\n                        {/* Tab navs */}\r\n                    </div>\r\n                    <div className=\"col-9 border\">\r\n                        {/* Tab content */}\r\n                        <div className=\"tab-content\" id=\"v-tabs-tabContent\">\r\n                            <div className=\"tab-pane fade show active\" id=\"v-tabs-home\" role=\"tabpanel\" aria-labelledby=\"v-tabs-home-tab\">\r\n                                <h3 className=\"text-warning mt-3 mb-3\">Enter the Value for the drop down : -</h3>\r\n                                {/* The Drop down for selecting the option  */}\r\n                                <input placeholder=\"Enter any text eg: 'A value' \" className=\"form-control txt-field\" value={option} onChange={(e) => setOption(e.target.value)} type=\"text\" />\r\n                                <br />\r\n                                <button className=\"btn btn-primary btn-lg btn-push\" onClick={() => pushAvailableOptions()}>Add</button>\r\n                                <br />\r\n                                <br />\r\n\r\n                                {(availableOptions == \"\") ? (\r\n                                    <h4 className=\"text-danger mb-4\">Currently there are no values in drop down.Enter any value to be appeared in dropdown.</h4>\r\n                                ) : (\r\n                                    <div className=\"table-responsive container\">\r\n                                        <table className=\"table table-bordered\">\r\n                                            {\r\n                                                availableOptions.map((v, i) => {\r\n                                                    return <tbody key={i}>\r\n                                                        {(i == 0) ? (\r\n                                                            <tr>\r\n                                                                <th>\r\n                                                                    <h3>#</h3>\r\n                                                                </th>\r\n                                                                <th>\r\n                                                                    <h4 className=\"text-success\">DropDown Values</h4>\r\n                                                                </th>\r\n                                                                <th>\r\n                                                                    <h4 className=\"text-warning\">EDIT</h4>\r\n                                                                </th>\r\n                                                                <th>\r\n                                                                    <h4 className=\"text-danger\">\r\n                                                                        Delete\r\n                                                                    </h4>\r\n                                                                </th>\r\n                                                            </tr>\r\n                                                        ) : (\r\n                                                            <></>\r\n                                                        )}\r\n\r\n                                                        <tr>\r\n                                                            <td>\r\n                                                                <h4>{i + 1})</h4>\r\n                                                            </td>\r\n                                                            <td><h3>{v}</h3></td>\r\n                                                            <td>\r\n                                                                <button className=\"btn btn-warning\">Edit</button>\r\n                                                            </td>\r\n                                                            <td>\r\n                                                                <button onClick={() => deleteItem(i)} className=\"btn btn-danger\">Delete</button>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                })\r\n                                            }\r\n                                        </table>\r\n                                    </div>\r\n                                )}\r\n\r\n                                {/* The Drop down for selecting the option */}\r\n                            </div>\r\n                            <div className=\"tab-pane fade\" id=\"v-tabs-profile\" role=\"tabpanel\" aria-labelledby=\"v-tabs-profile-tab\">\r\n                                <br />\r\n                                <h4 className=\"text-dark text-head\">Select the account name from the drop down list located below\r\n                                    <p className=\"text-danger text-bold text-center mt-4\"> <b>OR</b></p> Input desired account names by navigating to the Add Values Tab located on the left side bar:\r\n                                    {/* :  <span className=\"text-danger ml-4\">*</span></h4> */}\r\n                                </h4>\r\n                                <div className=\"input-group input-group-md category_select txt-field\">\r\n                                    <span className=\"input-group-addon glyphicon glyphicon-search\" id=\"sizing-addon2\"></span>\r\n                                    <select style={{ fontSize: \"15px\", width: \"200px\" }} value={currentOption}\r\n                                        onChange={(e) => setCurrentOption(e.target.value)} className=\"form-control\">\r\n                                        {[\"No Selected Value\", ...availableOptions].map((v, i) => {\r\n                                            return <option value={v} key={i}>\r\n                                                {v}\r\n                                            </option>\r\n                                        })}\r\n                                    </select>\r\n                                </div>\r\n                                <hr />\r\n\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <h3 className=\"text-primary mt-3 mb-3\">Debit Amount : -</h3>\r\n                                            {/* The Drop down for selecting the option  */}\r\n                                            <input type=\"number\" placeholder=\"Enter any debit amount eg: '100' \" className=\"form-control txt-field\" value={debit} onChange={(e) => setDebit(e.target.value)} />\r\n                                            <br />\r\n                                            <button className=\"btn btn-primary btn-push\" onClick={() => pushAvailableDebits()}>Add Debit Amount</button>\r\n                                            <br />\r\n                                            <br />\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <h3 className=\"text-primary mt-3 mb-3\">Credit Amount : -</h3>\r\n                                            {/* The Drop down for selecting the option  */}\r\n                                            <input type=\"number\" placeholder=\"Enter any credit amount eg: '10' \" className=\"form-control txt-field\" value={credit} onChange={(e) => setCredit(e.target.value)} />\r\n                                            <br />\r\n                                            <button className=\"btn btn-primary btn-push\" onClick={() => pushAvailableCredits()}>Add Credit Amount</button>\r\n                                            <br />\r\n                                            <br />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <hr />\r\n\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"table-responsive\">\r\n                                                <table className=\"table table-bordered\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th colSpan={3}>\r\n                                                                <h2 className=\"text-bold\"><i className=\"fas fa-list-alt fa-lg mr-3 text-success\"></i>&nbsp;&nbsp; Debit Card</h2>\r\n                                                                <h6><span className=\"text-success\">The amount in Debit Card in different sections</span> </h6>\r\n                                                            </th>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <th> <h2 className=\"text-center\">#</h2> </th>\r\n                                                            <th scope=\"col\"><h2>Amounts</h2></th>\r\n                                                            <th scope=\"col\"><h2>Edit</h2></th>\r\n                                                            {/* <th scope=\"col\">Priority</th>\r\n                                                <th scope=\"col\">Status</th> */}\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <>\r\n                                                        {/* This matters */}\r\n                                                        {availableOptions.map((s, i) => {\r\n                                                            return <tbody key={i}>\r\n                                                                <tr>\r\n                                                                    <th scope=\"row\" colSpan={3}><h4>{i + 1} - &nbsp; {s}</h4></th>\r\n                                                                </tr>\r\n                                                                {(availableDebits.length == 0) ? (\r\n                                                                    <tr>\r\n                                                                        {/* <th scope=\"row\"><i className=\"far fa-check-circle fa-lg\"></i>&nbsp;&nbsp;</th>\r\n                                                                        <td>&nbsp;&nbsp;</td>\r\n                                                                        <td>&nbsp;&nbsp;</td> */}\r\n                                                                        {/* <td>&nbsp;&nbsp;</td>\r\n                                                            <td>&nbsp;&nbsp;</td> */}\r\n                                                                    </tr>\r\n                                                                ) : (\r\n                                                                    availableDebits.map((v, j) => {\r\n                                                                        return <tr key={j}>\r\n                                                                            {(v.selectedOption == s) ? (\r\n                                                                                <>\r\n                                                                                    <th scope=\"row\" className=\"text-center w-fit-content text-bold\"><h4>{(j + 1)})</h4></th>\r\n\r\n                                                                                    <td>\r\n                                                                                        <h4 className=\"text-success mt-2 text-center text-bold\">{v.Debit}</h4>\r\n                                                                                    </td>\r\n\r\n                                                                                    <td className=\"text-center\"><button type=\"button\" className=\"btn btn-warning\">Edit</button></td>\r\n                                                                                </>\r\n                                                                            ) : (\r\n                                                                                <></>\r\n                                                                            )}\r\n                                                                        </tr>\r\n                                                                    })\r\n                                                                )}\r\n                                                            </tbody>\r\n                                                        })}\r\n                                                        {/* This matters */}\r\n                                                    </>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"table-responsive\">\r\n                                                <table className=\"table table-bordered\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th colSpan={3}>\r\n                                                                <h2 className=\"text-bold\"><i className=\"fas fa-list-alt fa-lg mr-3 text-danger\"></i>&nbsp;&nbsp; Credit Card</h2>\r\n                                                                <h6><span className=\"text-danger\">The amount in Credit Card in different sections</span> </h6>\r\n                                                            </th>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <th> <h2 className=\"text-center\">#</h2> </th>\r\n                                                            <th scope=\"col\"><h2>Amounts</h2></th>\r\n                                                            <th scope=\"col\"><h2>Edit</h2></th>\r\n                                                            {/* <th scope=\"col\">Priority</th>\r\n                                                <th scope=\"col\">Status</th> */}\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <>\r\n                                                        {/* This matters */}\r\n                                                        {availableOptions.map((s, i) => {\r\n                                                            return <tbody key={i}>\r\n                                                                <tr>\r\n                                                                    <th scope=\"row\" colSpan={3}><h4>{i + 1} - &nbsp; {s}</h4></th>\r\n                                                                </tr>\r\n                                                                {(availableCredits.length == 0) ? (\r\n                                                                    <tr>\r\n                                                                        {/* <th scope=\"row\"><i className=\"far fa-check-circle fa-lg\"></i>&nbsp;&nbsp;</th>\r\n                                                                        <td>&nbsp;&nbsp;</td>\r\n                                                                        <td>&nbsp;&nbsp;</td> */}\r\n                                                                        {/* <td>&nbsp;&nbsp;</td>\r\n                                                                        <td>&nbsp;&nbsp;</td> */}\r\n                                                                    </tr>\r\n                                                                ) : (\r\n                                                                    availableCredits.map((v, j) => {\r\n                                                                        return <tr key={j}>\r\n                                                                            {(v.selectedOption == s) ? (\r\n                                                                                <>\r\n                                                                                    <th scope=\"row\" className=\"text-center w-fit-content text-bold\"><h4>{(j + 1)})</h4></th>\r\n\r\n                                                                                    <td>\r\n                                                                                        <h4 className=\"text-danger text-bold\">{v.Credit}</h4>\r\n                                                                                    </td>\r\n\r\n                                                                                    <td><button type=\"button\" className=\"btn btn-warning\">Edit</button></td>\r\n                                                                                </>\r\n                                                                            ) : (\r\n                                                                                <></>\r\n                                                                            )}\r\n                                                                        </tr>\r\n                                                                    })\r\n                                                                )}\r\n                                                            </tbody>\r\n                                                        })}\r\n                                                        {/* This matters */}\r\n                                                    </>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* Tab content */}\r\n                    </div>\r\n                </div>\r\n            </div >\r\n            <hr />\r\n            <br />\r\n        </>\r\n    )\r\n}\r\nexport default Home;\r\n","E:\\Upwork Projects Clients\\Bashir Aziz\\React Accounting Project\\src\\Pages\\About\\index.jsx",["156","157","158","159"],"import React, { useEffect, useState } from \"react\";\r\nimport Header from \"../../Components/Header\";\r\nimport NavHheader from \"../../Components/NavHeader\";\r\n//Setting the use history hook\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\n\r\n\r\nconst About = () => {\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <NavHheader />\r\n            <hr />\r\n            <h1 className=\"text-danger container\">About Us</h1>\r\n            <hr />\r\n            <div className=\"container mt-4 border\">\r\n                <hr />\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            Lorem ipsum dolor sit, amet consectetur adipisicing elit. Odio excepturi modi doloremque, doloribus voluptates eveniet praesentium temporibus saepe maiores possimus eos deserunt repellat vel sequi magnam nihil quis ea exercitationem.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br />\r\n        </>\r\n    )\r\n}\r\nexport default About;\r\n","E:\\Upwork Projects Clients\\Bashir Aziz\\React Accounting Project\\src\\firebase\\index.js",[],"E:\\Upwork Projects Clients\\Bashir Aziz\\React Accounting Project\\src\\Components\\Header\\index.jsx",["160","161"],"import React,{useState,useEffect} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.scss\";\r\n\r\nconst Header = () => {\r\n\r\n    return (\r\n        <>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand navbar-text\" to='/'>Accounting</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-mdb-toggle=\"collapse\" data-mdb-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <i className=\"fas fa-bars\" />\r\n                    </button>\r\n                    {/* <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link active\" aria-current=\"page\" to='/'>Home</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to={`/about`} tabIndex={-1} aria-disabled=\"true\">About</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div> */}\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\nexport default Header;","E:\\Upwork Projects Clients\\Bashir Aziz\\React Accounting Project\\src\\Components\\NavHeader\\index.jsx",["162"],"import React from \"react\";\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport \"./style.scss\";\r\n\r\nconst NavHeader = (props) => {\r\n    const history = useHistory();\r\n\r\n    const MoveTo = (path) => {\r\n        // alert(path)\r\n        history.push(`${path}`)\r\n    }\r\n    return (\r\n        <>\r\n            {/* As a heading */}\r\n            <nav className={`NavHeader1`}>\r\n                <div className=\"navTextDiv container-fluid\">\r\n                    <span onClick={() => MoveTo(`/`)} className=\"navheader-text mb-0\">Welcome to Expense Calculator</span>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\nexport default NavHeader;","E:\\Upwork Projects Clients\\Bashir Aziz\\React Accounting Project\\src\\Pages\\Actual\\index.jsx",["163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190"],"import React, { useEffect, useState } from \"react\";\r\nimport Header from \"../../Components/Header\";\r\nimport NavHheader from \"../../Components/NavHeader\";\r\n//Setting the use history hook\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\n\r\n//Importing Firebase \r\nimport firebase from \"../../firebase\";\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nimport \"./style.scss\";\r\n\r\nlet AccountsData = [\r\n    {\r\n        name: 'Cash - Operating Account',\r\n        totalDebit: 0,\r\n        totalCredit: 0,\r\n        actualCredit: 0,\r\n        actualDebit: 0\r\n    },\r\n    {\r\n        name: 'Cash - Payroll Account',\r\n        totalDebit: 0,\r\n        totalCredit: 0,\r\n        actualCredit: 0,\r\n        actualDebit: 0\r\n    },\r\n    {\r\n        name: 'Cash - Money Market Account',\r\n        totalDebit: 0,\r\n        totalCredit: 0,\r\n        actualCredit: 0,\r\n        actualDebit: 0\r\n    },\r\n    {\r\n        name: 'Cash - User Defined1',\r\n        totalDebit: 0,\r\n        totalCredit: 0,\r\n        actualCredit: 0,\r\n        actualDebit: 0\r\n    },\r\n    {\r\n        name: 'Cash - User Defined2',\r\n        totalDebit: 0,\r\n        totalCredit: 0,\r\n        actualCredit: 0,\r\n        actualDebit: 0\r\n    },\r\n    {\r\n        name: 'Cash - User Defined3',\r\n        totalDebit: 0,\r\n        totalCredit: 0,\r\n        actualCredit: 0,\r\n        actualDebit: 0\r\n    },\r\n    {\r\n        name: 'Cash - Petty Cash',\r\n        totalDebit: 0,\r\n        totalCredit: 0,\r\n        actualCredit: 0,\r\n        actualDebit: 0\r\n    }\r\n]\r\n\r\nconst Actual = () => {\r\n    const [availableOptions, setAvailableOptions] = useState(AccountsData);\r\n\r\n    const [labels, setLabels] = useState([]);\r\n\r\n    const [currentLabel, setCurrentLabel] = useState(\"\");\r\n\r\n    const [currentOption, setCurrentOption] = useState(\"\");\r\n\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n    const [option, setOption] = useState(\"\");\r\n\r\n    //The debit state\r\n    const [debit, setDebit] = useState(0);\r\n    const [credit, setCredit] = useState(0);\r\n\r\n    //Available Debits\r\n    const [availableDebits, setAvailableDebits] = useState([]);\r\n    const [availableCredits, setAvailableCredits] = useState([]);\r\n\r\n    const history = useHistory();\r\n    // const location = useLocation();\r\n    // const { pathname } = location;\r\n    useEffect(() => {\r\n        const label = [\"A\", \"B\", \"C\", \"D\", \"E\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"]\r\n        setLabels(label);\r\n        //////////////////////////////////////////////////////////////////////////////////////////Retreiving firebase data from web\r\n        // Now retreiving the data\r\n        //////////////////////////////Here all data retreiving is working////////////////////////////\r\n        // const db = firebase.firestore();\r\n        // //Data Retreiving for Auth\r\n        // db.collection(`Languages`)\r\n        //     .get()\r\n        //     .then(snapshot => {\r\n        //         let data = [];\r\n        //         snapshot.forEach(element => {\r\n        //             data.push(Object.assign({\r\n        //                 \"id\": element.id,\r\n        //                 \"translation\": element.translation\r\n        //             }, element.data()))\r\n        //         })\r\n\r\n        //         const language_array = [];\r\n\r\n        //         for (let i = 0; i < data.length; i++) {\r\n        //             //console.log(data[i].translation.description.short_name);\r\n        //             let language_label = data[i].translation.description.short_name;\r\n        //             language_array.push(language_label);\r\n        //         }\r\n        //         console.log(language_array);\r\n        //         console.log(`data for current selected user `, convertArrayToObject(data, 1));\r\n        //     })\r\n\r\n    }, [])\r\n\r\n    const pushAvailableOptions = () => {\r\n        //Either I have to insert the new element or not.I will check if already a option present it cant be inserted again.\r\n        let insert = true;\r\n        for (let i = 0; i < availableOptions.length; i++) {\r\n            if (option == availableOptions[i].name) {\r\n                insert = false;\r\n                break;\r\n            }\r\n        }\r\n        if (!insert) {\r\n            alert(`Please insert a Unique Value. '${option}' is already present.`);\r\n        }\r\n        if (option != \"\" && insert == true) {\r\n            let obj = {\r\n                name: option,\r\n                totalDebit: 0,\r\n                totalCredit: 0,\r\n                actualCredit: 0,\r\n                actualDebit: 0\r\n            }\r\n            setAvailableOptions([...availableOptions, obj]);\r\n            setOption(\"\");\r\n        }\r\n        if (option == \"\") {\r\n            alert(\"Please enter any text to submit!\");\r\n        }\r\n    }\r\n\r\n    const pushAvailableDebits = () => {\r\n        if (debit != 0 && currentOption != \"\") {\r\n            let obj = {\r\n                selectedOption: currentOption,\r\n                Debit: debit,\r\n                Label: currentLabel\r\n            }\r\n\r\n            let arr = availableOptions;\r\n\r\n            ///////////Wait I will test it later///////////\r\n            // let index_current_account = 0;\r\n            // for (let i = 0; i < arr.length; i++) {\r\n            //     if (arr.name == currentOption) {\r\n            //         ++index_current_account;\r\n            //         console.log(`The current index of choosen account is ${i}`);\r\n            //     }\r\n            // }\r\n            // if (index_current_account == 1) {\r\n            //    arr[currentIndex].totalDebit = debit;\r\n            // }\r\n            ///////////Wait I will test it later///////////\r\n\r\n            let creditTotal = 0;\r\n            let debitTotal = 0;\r\n\r\n            for (let i = 0; i < arr.length; i++) {\r\n                if (arr[i].name == currentOption) {\r\n                    creditTotal = creditTotal + arr[i].totalCredit;\r\n                    debitTotal = debitTotal + arr[i].totalDebit;\r\n                    console.log(`The total debit value pushed at index ${i} of account named ${arr[i].totalDebit}`, arr[i].totalDebit);\r\n                }\r\n            }\r\n\r\n      \r\n\r\n            debitTotal = parseInt(debitTotal) + parseInt(debit);\r\n            if (debitTotal > creditTotal) {\r\n                arr[currentIndex].actualDebit = debitTotal - creditTotal;\r\n            }\r\n            else {\r\n                arr[currentIndex].actualCredit = creditTotal - debitTotal;\r\n            }\r\n\r\n            console.log(`The total Debits at position ${currentIndex} and value is : `, arr[currentIndex].totalDebit);\r\n\r\n            //Changing The total \r\n            arr[currentIndex].totalDebit = parseInt(debitTotal);\r\n            //Setting the Update Option Value\r\n            setAvailableOptions(arr);\r\n\r\n            console.log(\"Hi! Debit total is equal to : \",debitTotal);\r\n            console.log(\"Hi! Credit total is equal to : \",creditTotal);\r\n\r\n            setAvailableDebits([...availableDebits, obj]);\r\n            setDebit(0);\r\n        }\r\n        if (debit == 0) {\r\n            alert(\"Please enter any debit value to submit!\");\r\n            return;\r\n        }\r\n        if (currentOption == \"\") {\r\n            alert(\"Please select an option also from the above drop down to submit debit value.\")\r\n            return;\r\n        }\r\n        if (currentLabel == \"\") {\r\n            alert(\"Please select a Label from the Menu to Submit the value.\")\r\n            return;\r\n        }\r\n    }\r\n\r\n    const changingSelectedOption = (value) => {\r\n        var index;\r\n        for (let i = 0; i < availableOptions.length; i++) {\r\n            if (availableOptions[i].name === value) {\r\n                index = i;\r\n            }\r\n        }\r\n\r\n        setCurrentIndex(index);\r\n\r\n        console.log(\"The selected value index is : \" + index);\r\n\r\n        setCurrentOption(value);\r\n    }\r\n\r\n    const pushAvailableCredits = () => {\r\n        if (credit != 0 && currentOption != \"\") {\r\n            let obj = {\r\n                selectedOption: currentOption,\r\n                Credit: credit,\r\n                Label: currentLabel\r\n            }\r\n\r\n            let arr = availableOptions;\r\n\r\n            let creditTotal = 0;\r\n            let debitTotal = 0;\r\n\r\n            for (let i = 0; i < arr.length; i++) {\r\n                if (arr[i].name == currentOption) {\r\n                    creditTotal = creditTotal + arr[i].totalCredit;\r\n                    debitTotal = debitTotal + arr[i].totalDebit;\r\n                    console.log(i);\r\n                }\r\n            }\r\n\r\n            console.log(`The total Credits at position ${currentIndex} and value is : `, arr[currentIndex].totalCredit);\r\n\r\n            creditTotal = parseInt(creditTotal) + parseInt(credit);\r\n            if (debitTotal > creditTotal) {\r\n                arr[currentIndex].actualDebit = debitTotal - creditTotal;\r\n            }\r\n            else {\r\n                arr[currentIndex].actualCredit = creditTotal - debitTotal;\r\n            }\r\n\r\n            //Changing The total \r\n            arr[currentIndex].totalCredit = creditTotal;\r\n            //Setting the Option\r\n            setAvailableOptions(arr);\r\n            setAvailableCredits([...availableCredits, obj]);\r\n            setCredit(0);\r\n        }\r\n        if (credit == 0) {\r\n            alert(\"Please enter any Credit value to submit!\");\r\n            return;\r\n        }\r\n        if (currentOption == \"\") {\r\n            alert(\"Please select an option also from the above drop down to submit Credit value.\")\r\n            return;\r\n        }\r\n        if (currentLabel == \"\") {\r\n            alert(\"Please select a Label from the Menu to Submit the value.\")\r\n            return;\r\n        }\r\n    }\r\n\r\n    function arrayRemove(arr, value) {\r\n        return arr.filter(function (ele) {\r\n            return ele != value;\r\n        });\r\n    }\r\n\r\n    const deleteItem = (key) => {\r\n        // alert(key);\r\n        let arr = availableOptions;\r\n        //arr.splice(key, 1);\r\n        let value = arr[key];\r\n        //setAvailableOptions([]);\r\n        //const new_arr = arr;\r\n        var result = arrayRemove(arr, value);\r\n        console.log(\"Available Options is : \", result);\r\n        setAvailableOptions(result);\r\n        // if (window.confirm(`Are you sure you want to delete the element ${availableOptions[key]} at number ${key + 1}`)) {\r\n        //     condition = true;\r\n        //     console.log(\"Available Options is : \", arr);\r\n        // } else {\r\n        //     console.log(\"User canceled deletion!\");\r\n        // }\r\n    }\r\n\r\n    const changeSelectedOption = (e, key) => {\r\n        console.log(\"VVVVVVVVVVVVVVV \", e, key);\r\n        let aO = availableOptions;\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <NavHheader />\r\n            <br />\r\n            <div className=\"container-own\">\r\n                <div className=\"row\">\r\n                    <div>\r\n                        {/* Tabs navs */}\r\n                        <ul className=\"nav nav-tabs nav-justified mb-3\" id=\"ex1\" role=\"tablist\">\r\n                            <li className=\"nav-item\" role=\"presentation\">\r\n                                <a className=\"nav-link active\" id=\"ex3-tab-1\" data-mdb-toggle=\"tab\" href=\"#ex3-tabs-1\" role=\"tab\" aria-controls=\"ex3-tabs-1\" aria-selected=\"true\">Add Values</a>\r\n                            </li>\r\n                            <li className=\"nav-item\" role=\"presentation\">\r\n                                <a className=\"nav-link\" id=\"ex3-tab-2\" data-mdb-toggle=\"tab\" href=\"#ex3-tabs-2\" role=\"tab\" aria-controls=\"ex3-tabs-2\" aria-selected=\"false\">Calculate</a>\r\n                            </li>\r\n                        </ul>\r\n                        {/* Tabs navs */}\r\n                        {/* Tabs content */}\r\n                        <div className=\"tab-content\" id=\"ex2-content\">\r\n                            <div className=\"tab-pane fade show active container border\" id=\"ex3-tabs-1\" role=\"tabpanel\" aria-labelledby=\"ex3-tab-1\">\r\n                                <h3 className=\"text-warning mt-3 mb-3\">Enter the Value for the drop down : -</h3>\r\n                                {/* The Drop down for selecting the option  */}\r\n                                <input placeholder=\"Enter any text eg: 'A value' \" className=\"form-control txt-field\" value={option} onChange={(e) => setOption(e.target.value)} type=\"text\" />\r\n                                <br />\r\n                                <button className=\"btn btn-primary btn-lg btn-push\" onClick={() => pushAvailableOptions()}>Add</button>\r\n                                <br />\r\n                                <br />\r\n\r\n                                {(availableOptions == \"\") ? (\r\n                                    <h4 className=\"text-danger mb-4\">Currently there are no values in drop down.Enter any value to be appeared in dropdown.</h4>\r\n                                ) : (\r\n                                    <div className=\"table-responsive container\">\r\n                                        <table className=\"table table-bordered\">\r\n                                            {\r\n                                                availableOptions.map((v, i) => {\r\n                                                    return <tbody key={i}>\r\n                                                        {(i == 0) ? (\r\n                                                            <tr>\r\n                                                                <th>\r\n                                                                    <h3>#</h3>\r\n                                                                </th>\r\n                                                                <th>\r\n                                                                    <h4 className=\"text-success\">DropDown Values</h4>\r\n                                                                </th>\r\n                                                                <th>\r\n                                                                    <h4 className=\"text-warning\">EDIT</h4>\r\n                                                                </th>\r\n                                                                <th>\r\n                                                                    <h4 className=\"text-danger\">\r\n                                                                        Delete\r\n                                                                    </h4>\r\n                                                                </th>\r\n                                                            </tr>\r\n                                                        ) : (\r\n                                                            <></>\r\n                                                        )}\r\n\r\n                                                        <tr>\r\n                                                            <td>\r\n                                                                <h4>{i + 1})</h4>\r\n                                                            </td>\r\n                                                            <td><h3>{v.name}</h3></td>\r\n                                                            <td>\r\n                                                                <button className=\"btn btn-warning\">Edit</button>\r\n                                                            </td>\r\n                                                            <td>\r\n                                                                <button onClick={() => deleteItem(i)} className=\"btn btn-danger\">Delete</button>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                })\r\n                                            }\r\n                                        </table>\r\n                                    </div>\r\n                                )}\r\n                                {/* The Drop down for selecting the option */}\r\n                            </div>\r\n                            <div className=\"tab-pane fade\" id=\"ex3-tabs-2\" role=\"tabpanel\" aria-labelledby=\"ex3-tab-2\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"container\">\r\n                                            <br />\r\n                                            <h4 className=\"text-dark text-head\">Select the account name from the drop down list located below\r\n                                                <p className=\"text-danger text-bold text-center mt-4\"> <b>OR</b></p> Input desired account names by navigating to the Add Values Tab located on the left side bar:\r\n                                                {/* :  <span className=\"text-danger ml-4\">*</span></h4> */}\r\n                                            </h4>\r\n                                            <div title=\"Select the account name from the drop down list located below\" className=\"input-group input-group-md txt-field\">\r\n                                                <span className=\"input-group-addon glyphicon glyphicon-search\" id=\"sizing-addon2\"></span>\r\n                                                <select style={{ fontSize: \"18px\", width: \"200px\", height: \"40px\" }} value={currentOption}\r\n                                                    onChange={(e) => changingSelectedOption(e.target.value)} className=\"form-control\">\r\n                                                    {[\"No Selected Value\", ...availableOptions].map((v, i) => {\r\n                                                        return <option value={v.name} key={i}>\r\n                                                            {v.name}\r\n                                                        </option>\r\n                                                    })}\r\n                                                </select>\r\n                                            </div>\r\n\r\n                                            <br />\r\n\r\n                                            <h4 className=\"text-primary text-bold\">\r\n                                                Select the label you want to insert with the value :\r\n                                            </h4>\r\n\r\n                                            <div className=\"input-group input-group-md txt-field\">\r\n                                                <span className=\"input-group-addon glyphicon glyphicon-search\" id=\"sizing-addon2\"></span>\r\n                                                <select style={{ fontSize: \"18px\", width: \"200px\", color: \"blue\" }} value={currentLabel}\r\n                                                    onChange={(e) => setCurrentLabel(e.target.value)} className=\"form-control\">\r\n                                                    {[\"No Selected Label\", ...labels].map((v, i) => {\r\n                                                        return <option value={v} key={i}>\r\n                                                            {v}\r\n                                                        </option>\r\n                                                    })}\r\n                                                </select>\r\n                                            </div>\r\n\r\n                                            <br />\r\n                                            <br />\r\n\r\n                                        </div>\r\n\r\n                                        <hr />\r\n\r\n                                        <div className=\"container\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-6\">\r\n                                                    <h3 className=\"text-primary mt-3 mb-3\">Debit Amount : -</h3>\r\n                                                    {/* The Drop down for selecting the option  */}\r\n                                                    <input type=\"number\" placeholder=\"Enter any debit amount eg: '100' \" className=\"form-control txt-field\" value={debit} onChange={(e) => setDebit(e.target.value)} />\r\n                                                    <br />\r\n                                                    <button className=\"btn btn-primary btn-push\" onClick={() => pushAvailableDebits()}>Add Debit Amount</button>\r\n                                                    <br />\r\n                                                    <br />\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    <h3 className=\"text-primary mt-3 mb-3\">Credit Amount : -</h3>\r\n                                                    {/* The Drop down for selecting the option  */}\r\n                                                    <input type=\"number\" placeholder=\"Enter any credit amount eg: '10' \" className=\"form-control txt-field\" value={credit} onChange={(e) => setCredit(e.target.value)} />\r\n                                                    <br />\r\n                                                    <button className=\"btn btn-primary btn-push\" onClick={() => pushAvailableCredits()}>Add Credit Amount</button>\r\n                                                    <br />\r\n                                                    <br />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <br />\r\n\r\n                                        {availableOptions.map((v, i) => {\r\n                                            return <div className=\"container\" key={i}>\r\n                                                <div className=\"border w-fit-content\">\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-md-12\">\r\n                                                            <div className=\"input-group input-group-md category_select txt-field\">\r\n                                                                <span className=\"input-group-addon glyphicon glyphicon-search\"></span>\r\n                                                                <select id=\"Table-DropDown\" value={v.name}\r\n                                                                    onChange={(e) => changeSelectedOption(e.target.value, i)} className=\"form-control bg-heading\">\r\n                                                                    {[\"No Selected Value\", ...availableOptions].map((v, i) => {\r\n                                                                        return <option value={v.name} key={i}>\r\n                                                                            {v.name}\r\n                                                                        </option>\r\n                                                                    })}\r\n                                                                </select>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-md-6\">\r\n                                                            <div className=\"table table table-bordered table-responsive\">\r\n                                                                <table className=\"table table-hover\">\r\n                                                                    <thead>\r\n                                                                        <tr>\r\n                                                                            <th colSpan={3}>\r\n                                                                                <h5 className=\"text-bold\"><i className=\"fas fa-list-alt fa-lg mr-3 text-success\"></i>&nbsp;&nbsp; Debit Card</h5>\r\n                                                                                <h6><span className=\"text-success\">The amount in Credit Card in different sections</span> </h6>\r\n                                                                            </th>\r\n                                                                        </tr>\r\n                                                                        <tr>\r\n                                                                            <th scope=\"col\"> <p className=\"text-center\"> <b>Label</b></p> </th>\r\n                                                                            <th scope=\"col\"> <p className=\"text-center\"><b>Amounts</b></p></th>\r\n                                                                            {/* <th scope=\"col\"> <p><b>Edit</b></p> </th> */}\r\n                                                                        </tr>\r\n                                                                    </thead>\r\n                                                                    <>\r\n                                                                        <tbody className=\"bg-gradient-upper-table\">\r\n\r\n                                                                            {(availableDebits.length == 0) ? (\r\n                                                                                <tr>\r\n                                                                                    <th scope=\"row\" className=\"text-center\"> No Label</th>\r\n                                                                                    <th scope=\"row\" className=\"text-center\">No Value</th>\r\n                                                                                    {/* <th scope=\"row\"><button className=\"btn btn-warning btn-sm\" disabled={true}>E</button></th> */}\r\n                                                                                </tr>\r\n                                                                            ) : (\r\n                                                                                availableDebits.map((z, j) => {\r\n                                                                                    return <tr key={j}>\r\n                                                                                        {\r\n                                                                                            (z.selectedOption == v.name) ? (\r\n                                                                                                <>\r\n                                                                                                    <th scope=\"row\" className=\"text-center w-fit-content text-bold mt-3\"><h6 className=\"text-bold\">{z.Label}</h6></th>\r\n                                                                                                    <td>\r\n                                                                                                        <h6 className=\"text-success mt-2 text-center text-bold\">{z.Debit}</h6>\r\n                                                                                                    </td>\r\n                                                                                                    {/* <td className=\"text-center\"><button type=\"button\" className=\"btn btn-warning btn-sm\">E</button></td> */}\r\n                                                                                                </>\r\n                                                                                            ) : (\r\n                                                                                                <></>\r\n                                                                                            )\r\n                                                                                        }\r\n                                                                                    </tr>\r\n                                                                                })\r\n                                                                            )}\r\n                                                                        </tbody>\r\n                                                                        {/* This matters */}\r\n                                                                    </>\r\n                                                                </table>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col-md-6\">\r\n                                                            <div className=\"table table-bordered table-responsive\">\r\n                                                                <table className=\"table table-hover\">\r\n                                                                    <thead>\r\n                                                                        <tr>\r\n                                                                            <th colSpan={3}>\r\n                                                                                <h5 className=\"text-bold\"><i className=\"fas fa-list-alt fa-lg mr-3 text-danger\"></i>&nbsp;&nbsp; Credit Card</h5>\r\n                                                                                <h6><span className=\"text-danger\">The amount in Credit Card in different sections</span> </h6>\r\n                                                                            </th>\r\n                                                                        </tr>\r\n                                                                        <tr>\r\n                                                                            <th scope=\"col\"> <p className=\"text-center\"> <b>Label</b></p> </th>\r\n                                                                            <th scope=\"col\"> <p className=\"text-center\"><b>Amounts</b></p></th>\r\n                                                                            {/* <th scope=\"col\"> <p><b>Edit</b></p> </th> */}\r\n                                                                        </tr>\r\n                                                                    </thead>\r\n                                                                    <>\r\n                                                                        <tbody className=\"bg-gradient-upper-table\">\r\n                                                                            {(availableCredits.length == 0) ? (\r\n                                                                                <tr>\r\n                                                                                    <th scope=\"row\" className=\"text-center\">No Label</th>\r\n                                                                                    <th scope=\"row\" className=\"text-center\">No Value</th>\r\n                                                                                    {/* <th scope=\"row\"><button className=\"btn btn-warning btn-sm\" disabled={true}>E</button></th> */}\r\n                                                                                </tr>\r\n                                                                            ) : (\r\n                                                                                availableCredits.map((z, j) => {\r\n                                                                                    return <tr key={j}>\r\n                                                                                        {(z.selectedOption == v.name) ? (\r\n                                                                                            <>\r\n                                                                                                <th scope=\"row\" className=\"text-center text-bold mt-3\"><h6 className=\"text-bold\">{z.Label}</h6></th>\r\n                                                                                                <td>\r\n                                                                                                    <h6 className=\"text-danger text-center mt-2 text-bold\">{z.Credit}</h6>\r\n                                                                                                </td>\r\n                                                                                                {/* <td className=\"text-center\"><button type=\"button\" className=\"btn btn-warning btn-sm\">E</button></td> */}\r\n                                                                                            </>\r\n                                                                                        ) : (\r\n                                                                                            <></>\r\n                                                                                        )}\r\n                                                                                    </tr>\r\n                                                                                })\r\n                                                                            )}\r\n                                                                            {/* <tr>\r\n                                                                                <td>\r\n                                                                                    <h4>A</h4>\r\n                                                                                </td>\r\n                                                                                <td>\r\n                                                                                    <h4>B</h4>\r\n                                                                                </td>\r\n                                                                            </tr> */}\r\n                                                                        </tbody>\r\n                                                                        {/* This matters */}\r\n                                                                    </>\r\n                                                                </table>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <hr />\r\n\r\n                                                    <div className=\"row mb-4 text-center\">\r\n                                                        <div className=\"col-md-6\">\r\n                                                            <h4><b>Total</b> = <b className=\"text-dark mt-4\">{v.totalDebit}.</b></h4>\r\n                                                            {/* <h4>Total Amount of Cash in {v.name} :- <b className=\"text-dark mt-4\">{v.totalDebit}.</b></h4> */}\r\n                                                        </div>\r\n                                                        <div className=\"col-md-6\">\r\n                                                            {/* <h4>Total Amount of Cash in {v.name} :- <b className=\"text-dark mt-4\">{v.totalCredit}.</b></h4> */}\r\n                                                            <h4><b>Total</b> = <b className=\"text-dark mt-4\">{v.totalCredit}.</b></h4>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <hr />\r\n\r\n                                                    <div className=\"row mb-4 text-center\">\r\n                                                        <div className=\"col-md-6\">\r\n                                                            {(v.actualDebit > v.actualCredit) ? (\r\n                                                                <h4><b>Debit</b> = <b className=\"text-success mt-4\">{v.actualDebit}</b></h4>\r\n                                                                // <h4>Actual <b>Debit</b> in {v.name} :- <b className=\"text-success mt-4\">{v.actualDebit}</b></h4>\r\n                                                            ) : (\r\n                                                                <h4><b>Debit</b> = <b className=\"text-success mt-4\">0</b></h4>\r\n                                                                // <h4>Actual <b>Debit</b> in {v.name} :- <b className=\"text-success mt-4\">0</b></h4>\r\n                                                            )}\r\n                                                        </div>\r\n                                                        <div className=\"col-md-6\">\r\n                                                            {(v.actualCredit > v.actualDebit) ? (\r\n                                                                <h4><b>Credit</b> = <b className=\"text-danger mt-4\">{v.actualCredit}</b></h4>\r\n                                                                // <h4>Actual <b>Credit</b> in {v.name} :- <b className=\"text-danger mt-4\">{v.actualCredit}</b></h4>\r\n                                                            ) : (\r\n                                                                <h4><b>Credit</b> = <b className=\"text-danger mt-4\">0</b></h4>\r\n                                                                // <h4>Actual <b>Credit</b> in {v.name} :- <b className=\"text-danger mt-4\">0</b></h4>\r\n                                                            )}\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        })}\r\n                                    </div>\r\n                                    <br />\r\n                                    <hr />\r\n                                    <br />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"table table-responsive\">\r\n                                                <table className=\"table table-bordered\">\r\n                                                    <thead className=\"bg-dark\">\r\n                                                        <tr>\r\n                                                            <th colSpan={3}>\r\n                                                                <h5 className=\"text-bold text-center text-custom\"><i className=\"fas fa-table fa-lg mr-3 mt-2 text-light\"></i>&nbsp;&nbsp; CREDITS AND DEBITS IN EACH ACCOUNT</h5>\r\n                                                            </th>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <th scope=\"col\"> <h4 className=\"text-center text-light\"> <b>Account Name</b></h4> </th>\r\n                                                            <th scope=\"col\"> <h4 className=\"text-center text-light\"><b>Debit Value</b></h4></th>\r\n                                                            <th scope=\"col\"> <h4 className=\"text-center text-light\"><b>Credit Value</b></h4></th>\r\n                                                            {/* <th scope=\"col\"> <p><b>Edit</b></p> </th> */}\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <>\r\n                                                        <tbody className=\"bg-gradient\">\r\n                                                            {(availableOptions.length == 0) ? (\r\n                                                                <tr>\r\n                                                                    <th scope=\"row\" className=\"text-center\">No Name</th>\r\n                                                                    <th scope=\"row\" className=\"text-center\">No Debit Value</th>\r\n                                                                    <th scope=\"row\" className=\"text-center\">No Credit Value</th>\r\n                                                                    {/* <th scope=\"row\"><button className=\"btn btn-warning btn-sm\" disabled={true}>E</button></th> */}\r\n                                                                </tr>\r\n                                                            ) : (\r\n                                                                availableOptions.map((v, i) => {\r\n                                                                    return <tr key={i}>\r\n                                                                        <th scope=\"row\" className=\"text-center text-bold mt-3\"><h5 className=\"text-bold\"><b>{v.name}</b></h5></th>\r\n                                                                        <td>\r\n                                                                            {(v.actualCredit < v.actualDebit) ? (\r\n                                                                                <h6 className=\"text-success text-center mt-2 text-bold\">{v.actualDebit}</h6>\r\n                                                                            ) : (\r\n                                                                                <h6 className=\"text-dark text-center mt-2 text-bold\">0</h6>\r\n                                                                            )}\r\n                                                                        </td>\r\n                                                                        <td>\r\n                                                                            {(v.actualCredit > v.actualDebit) ? (\r\n                                                                                <h6 className=\"text-danger text-center mt-2 text-bold\">{v.actualCredit}</h6>\r\n                                                                            ) : (\r\n                                                                                <h6 className=\"text-dark text-center mt-2 text-bold\">0</h6>\r\n                                                                            )}\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                })\r\n                                                            )}\r\n                                                        </tbody>\r\n                                                        {/* This matters */}\r\n                                                    </>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* Tabs content */}\r\n                    </div>\r\n                </div>\r\n            </div >\r\n            <br />\r\n            <br />\r\n        </>\r\n    )\r\n}\r\nexport default Actual;\r\n",{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":18,"column":7,"nodeType":"197","messageId":"198","endLine":18,"endColumn":27},{"ruleId":"195","severity":1,"message":"199","line":4,"column":8,"nodeType":"197","messageId":"198","endLine":4,"endColumn":12},{"ruleId":"195","severity":1,"message":"200","line":6,"column":26,"nodeType":"197","messageId":"198","endLine":6,"endColumn":31},{"ruleId":"195","severity":1,"message":"201","line":11,"column":10,"nodeType":"197","messageId":"198","endLine":11,"endColumn":21},{"ruleId":"195","severity":1,"message":"202","line":11,"column":23,"nodeType":"197","messageId":"198","endLine":11,"endColumn":33},{"ruleId":"195","severity":1,"message":"203","line":14,"column":12,"nodeType":"197","messageId":"198","endLine":14,"endColumn":18},{"ruleId":"195","severity":1,"message":"204","line":14,"column":20,"nodeType":"197","messageId":"198","endLine":14,"endColumn":29},{"ruleId":"195","severity":1,"message":"201","line":8,"column":10,"nodeType":"197","messageId":"198","endLine":8,"endColumn":21},{"ruleId":"195","severity":1,"message":"205","line":13,"column":10,"nodeType":"197","messageId":"198","endLine":13,"endColumn":15},{"ruleId":"195","severity":1,"message":"206","line":13,"column":17,"nodeType":"197","messageId":"198","endLine":13,"endColumn":24},{"ruleId":"195","severity":1,"message":"207","line":25,"column":12,"nodeType":"197","messageId":"198","endLine":25,"endColumn":27},{"ruleId":"195","severity":1,"message":"196","line":52,"column":11,"nodeType":"197","messageId":"198","endLine":52,"endColumn":31},{"ruleId":"208","severity":1,"message":"209","line":62,"column":5,"nodeType":"197","endLine":62,"endColumn":14,"suggestions":"210"},{"ruleId":"195","severity":1,"message":"211","line":115,"column":11,"nodeType":"197","messageId":"198","endLine":115,"endColumn":18},{"ruleId":"195","severity":1,"message":"212","line":1,"column":15,"nodeType":"197","messageId":"198","endLine":1,"endColumn":23},{"ruleId":"195","severity":1,"message":"213","line":1,"column":24,"nodeType":"197","messageId":"198","endLine":1,"endColumn":33},{"ruleId":"195","severity":1,"message":"199","line":2,"column":8,"nodeType":"197","messageId":"198","endLine":2,"endColumn":12},{"ruleId":"195","severity":1,"message":"200","line":4,"column":26,"nodeType":"197","messageId":"198","endLine":4,"endColumn":31},{"ruleId":"195","severity":1,"message":"199","line":2,"column":8,"nodeType":"197","messageId":"198","endLine":2,"endColumn":12},{"ruleId":"195","severity":1,"message":"200","line":4,"column":26,"nodeType":"197","messageId":"198","endLine":4,"endColumn":31},{"ruleId":"195","severity":1,"message":"201","line":5,"column":22,"nodeType":"197","messageId":"198","endLine":5,"endColumn":33},{"ruleId":"195","severity":1,"message":"214","line":8,"column":7,"nodeType":"197","messageId":"198","endLine":8,"endColumn":11},{"ruleId":"195","severity":1,"message":"215","line":15,"column":7,"nodeType":"197","messageId":"198","endLine":15,"endColumn":12},{"ruleId":"195","severity":1,"message":"201","line":8,"column":10,"nodeType":"197","messageId":"198","endLine":8,"endColumn":21},{"ruleId":"195","severity":1,"message":"207","line":18,"column":12,"nodeType":"197","messageId":"198","endLine":18,"endColumn":27},{"ruleId":"208","severity":1,"message":"209","line":45,"column":5,"nodeType":"197","endLine":45,"endColumn":14,"suggestions":"216"},{"ruleId":"195","severity":1,"message":"217","line":1,"column":8,"nodeType":"197","messageId":"198","endLine":1,"endColumn":13},{"ruleId":"195","severity":1,"message":"213","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":26},{"ruleId":"195","severity":1,"message":"212","line":1,"column":28,"nodeType":"197","messageId":"198","endLine":1,"endColumn":36},{"ruleId":"195","severity":1,"message":"199","line":2,"column":8,"nodeType":"197","messageId":"198","endLine":2,"endColumn":12},{"ruleId":"195","severity":1,"message":"218","line":4,"column":10,"nodeType":"197","messageId":"198","endLine":4,"endColumn":24},{"ruleId":"195","severity":1,"message":"200","line":4,"column":26,"nodeType":"197","messageId":"198","endLine":4,"endColumn":31},{"ruleId":"195","severity":1,"message":"201","line":6,"column":10,"nodeType":"197","messageId":"198","endLine":6,"endColumn":21},{"ruleId":"195","severity":1,"message":"202","line":6,"column":23,"nodeType":"197","messageId":"198","endLine":6,"endColumn":33},{"ruleId":"195","severity":1,"message":"205","line":11,"column":10,"nodeType":"197","messageId":"198","endLine":11,"endColumn":15},{"ruleId":"195","severity":1,"message":"206","line":11,"column":17,"nodeType":"197","messageId":"198","endLine":11,"endColumn":24},{"ruleId":"195","severity":1,"message":"214","line":15,"column":7,"nodeType":"197","messageId":"198","endLine":15,"endColumn":11},{"ruleId":"191","replacedBy":"219"},{"ruleId":"193","replacedBy":"220"},{"ruleId":"195","severity":1,"message":"212","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":25},{"ruleId":"195","severity":1,"message":"213","line":1,"column":27,"nodeType":"197","messageId":"198","endLine":1,"endColumn":36},{"ruleId":"195","severity":1,"message":"221","line":4,"column":8,"nodeType":"197","messageId":"198","endLine":4,"endColumn":12},{"ruleId":"195","severity":1,"message":"222","line":5,"column":8,"nodeType":"197","messageId":"198","endLine":5,"endColumn":13},{"ruleId":"195","severity":1,"message":"201","line":5,"column":10,"nodeType":"197","messageId":"198","endLine":5,"endColumn":21},{"ruleId":"195","severity":1,"message":"223","line":8,"column":8,"nodeType":"197","messageId":"198","endLine":8,"endColumn":16},{"ruleId":"195","severity":1,"message":"224","line":33,"column":11,"nodeType":"197","messageId":"198","endLine":33,"endColumn":18},{"ruleId":"225","severity":1,"message":"226","line":71,"column":24,"nodeType":"227","messageId":"228","endLine":71,"endColumn":26},{"ruleId":"225","severity":1,"message":"229","line":79,"column":20,"nodeType":"227","messageId":"228","endLine":79,"endColumn":22},{"ruleId":"225","severity":1,"message":"226","line":79,"column":36,"nodeType":"227","messageId":"228","endLine":79,"endColumn":38},{"ruleId":"225","severity":1,"message":"226","line":83,"column":20,"nodeType":"227","messageId":"228","endLine":83,"endColumn":22},{"ruleId":"225","severity":1,"message":"229","line":89,"column":19,"nodeType":"227","messageId":"228","endLine":89,"endColumn":21},{"ruleId":"225","severity":1,"message":"229","line":89,"column":41,"nodeType":"227","messageId":"228","endLine":89,"endColumn":43},{"ruleId":"225","severity":1,"message":"226","line":97,"column":19,"nodeType":"227","messageId":"228","endLine":97,"endColumn":21},{"ruleId":"225","severity":1,"message":"226","line":100,"column":27,"nodeType":"227","messageId":"228","endLine":100,"endColumn":29},{"ruleId":"225","severity":1,"message":"229","line":106,"column":20,"nodeType":"227","messageId":"228","endLine":106,"endColumn":22},{"ruleId":"225","severity":1,"message":"229","line":106,"column":42,"nodeType":"227","messageId":"228","endLine":106,"endColumn":44},{"ruleId":"225","severity":1,"message":"226","line":114,"column":20,"nodeType":"227","messageId":"228","endLine":114,"endColumn":22},{"ruleId":"225","severity":1,"message":"226","line":117,"column":27,"nodeType":"227","messageId":"228","endLine":117,"endColumn":29},{"ruleId":"225","severity":1,"message":"229","line":124,"column":24,"nodeType":"227","messageId":"228","endLine":124,"endColumn":26},{"ruleId":"225","severity":1,"message":"226","line":173,"column":52,"nodeType":"227","messageId":"228","endLine":173,"endColumn":54},{"ruleId":"225","severity":1,"message":"226","line":181,"column":61,"nodeType":"227","messageId":"228","endLine":181,"endColumn":63},{"ruleId":"225","severity":1,"message":"226","line":294,"column":90,"nodeType":"227","messageId":"228","endLine":294,"endColumn":92},{"ruleId":"225","severity":1,"message":"226","line":305,"column":96,"nodeType":"227","messageId":"228","endLine":305,"endColumn":98},{"ruleId":"225","severity":1,"message":"226","line":353,"column":91,"nodeType":"227","messageId":"228","endLine":353,"endColumn":93},{"ruleId":"225","severity":1,"message":"226","line":364,"column":96,"nodeType":"227","messageId":"228","endLine":364,"endColumn":98},{"ruleId":"195","severity":1,"message":"213","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":26},{"ruleId":"195","severity":1,"message":"212","line":1,"column":28,"nodeType":"197","messageId":"198","endLine":1,"endColumn":36},{"ruleId":"195","severity":1,"message":"201","line":5,"column":10,"nodeType":"197","messageId":"198","endLine":5,"endColumn":21},{"ruleId":"195","severity":1,"message":"224","line":9,"column":11,"nodeType":"197","messageId":"198","endLine":9,"endColumn":18},{"ruleId":"195","severity":1,"message":"212","line":1,"column":15,"nodeType":"197","messageId":"198","endLine":1,"endColumn":23},{"ruleId":"195","severity":1,"message":"213","line":1,"column":24,"nodeType":"197","messageId":"198","endLine":1,"endColumn":33},{"ruleId":"195","severity":1,"message":"201","line":2,"column":22,"nodeType":"197","messageId":"198","endLine":2,"endColumn":33},{"ruleId":"195","severity":1,"message":"201","line":5,"column":10,"nodeType":"197","messageId":"198","endLine":5,"endColumn":21},{"ruleId":"195","severity":1,"message":"223","line":8,"column":8,"nodeType":"197","messageId":"198","endLine":8,"endColumn":16},{"ruleId":"195","severity":1,"message":"224","line":87,"column":11,"nodeType":"197","messageId":"198","endLine":87,"endColumn":18},{"ruleId":"225","severity":1,"message":"226","line":126,"column":24,"nodeType":"227","messageId":"228","endLine":126,"endColumn":26},{"ruleId":"225","severity":1,"message":"229","line":134,"column":20,"nodeType":"227","messageId":"228","endLine":134,"endColumn":22},{"ruleId":"225","severity":1,"message":"226","line":134,"column":36,"nodeType":"227","messageId":"228","endLine":134,"endColumn":38},{"ruleId":"225","severity":1,"message":"226","line":145,"column":20,"nodeType":"227","messageId":"228","endLine":145,"endColumn":22},{"ruleId":"225","severity":1,"message":"229","line":151,"column":19,"nodeType":"227","messageId":"228","endLine":151,"endColumn":21},{"ruleId":"225","severity":1,"message":"229","line":151,"column":41,"nodeType":"227","messageId":"228","endLine":151,"endColumn":43},{"ruleId":"225","severity":1,"message":"226","line":177,"column":33,"nodeType":"227","messageId":"228","endLine":177,"endColumn":35},{"ruleId":"225","severity":1,"message":"226","line":207,"column":19,"nodeType":"227","messageId":"228","endLine":207,"endColumn":21},{"ruleId":"225","severity":1,"message":"226","line":211,"column":27,"nodeType":"227","messageId":"228","endLine":211,"endColumn":29},{"ruleId":"225","severity":1,"message":"226","line":215,"column":26,"nodeType":"227","messageId":"228","endLine":215,"endColumn":28},{"ruleId":"225","severity":1,"message":"229","line":237,"column":20,"nodeType":"227","messageId":"228","endLine":237,"endColumn":22},{"ruleId":"225","severity":1,"message":"229","line":237,"column":42,"nodeType":"227","messageId":"228","endLine":237,"endColumn":44},{"ruleId":"225","severity":1,"message":"226","line":250,"column":33,"nodeType":"227","messageId":"228","endLine":250,"endColumn":35},{"ruleId":"225","severity":1,"message":"226","line":274,"column":20,"nodeType":"227","messageId":"228","endLine":274,"endColumn":22},{"ruleId":"225","severity":1,"message":"226","line":278,"column":27,"nodeType":"227","messageId":"228","endLine":278,"endColumn":29},{"ruleId":"225","severity":1,"message":"226","line":282,"column":26,"nodeType":"227","messageId":"228","endLine":282,"endColumn":28},{"ruleId":"225","severity":1,"message":"229","line":290,"column":24,"nodeType":"227","messageId":"228","endLine":290,"endColumn":26},{"ruleId":"195","severity":1,"message":"230","line":314,"column":13,"nodeType":"197","messageId":"198","endLine":314,"endColumn":15},{"ruleId":"225","severity":1,"message":"226","line":347,"column":52,"nodeType":"227","messageId":"228","endLine":347,"endColumn":54},{"ruleId":"225","severity":1,"message":"226","line":355,"column":61,"nodeType":"227","messageId":"228","endLine":355,"endColumn":63},{"ruleId":"225","severity":1,"message":"226","line":506,"column":102,"nodeType":"227","messageId":"228","endLine":506,"endColumn":104},{"ruleId":"225","severity":1,"message":"226","line":516,"column":111,"nodeType":"227","messageId":"228","endLine":516,"endColumn":113},{"ruleId":"225","severity":1,"message":"226","line":556,"column":103,"nodeType":"227","messageId":"228","endLine":556,"endColumn":105},{"ruleId":"225","severity":1,"message":"226","line":565,"column":108,"nodeType":"227","messageId":"228","endLine":565,"endColumn":110},{"ruleId":"225","severity":1,"message":"226","line":658,"column":87,"nodeType":"227","messageId":"228","endLine":658,"endColumn":89},"no-native-reassign",["231"],"no-negated-in-lhs",["232"],"no-unused-vars","'convertArrayToObject' is assigned a value but never used.","Identifier","unusedVar","'i18n' is defined but never used.","'Trans' is defined but never used.","'useLocation' is defined but never used.","'useHistory' is defined but never used.","'change' is assigned a value but never used.","'setChange' is assigned a value but never used.","'query' is defined but never used.","'orderBy' is defined but never used.","'currentLanguage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setChange'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [change] as a second argument to the useEffect Hook.",["233"],"'addData' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'lngs' is assigned a value but never used.","'Arrow' is assigned a value but never used.",["234"],"'React' is defined but never used.","'useTranslation' is defined but never used.",["231"],["232"],"'Home' is defined but never used.","'About' is defined but never used.","'firebase' is defined but never used.","'history' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'aO' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"235","fix":"236"},{"desc":"235","fix":"237"},"Add dependencies array: [change]",{"range":"238","text":"239"},{"range":"240","text":"239"},[4133,4133],", [change]",[2268,2268]]