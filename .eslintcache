[{"H:\\React Current Project\\Bashir Aziz\\src\\index.js":"1","H:\\React Current Project\\Bashir Aziz\\src\\App.js":"2","H:\\React Current Project\\Bashir Aziz\\src\\config\\router.js":"3","H:\\React Current Project\\Bashir Aziz\\src\\Pages\\Actual\\index.jsx":"4","H:\\React Current Project\\Bashir Aziz\\src\\Pages\\Home\\index.jsx":"5","H:\\React Current Project\\Bashir Aziz\\src\\Pages\\About\\index.jsx":"6","H:\\React Current Project\\Bashir Aziz\\src\\Pages\\Login\\index.jsx":"7","H:\\React Current Project\\Bashir Aziz\\src\\history.js":"8","H:\\React Current Project\\Bashir Aziz\\src\\firebase\\index.js":"9","H:\\React Current Project\\Bashir Aziz\\src\\Components\\NavHeader\\index.jsx":"10","H:\\React Current Project\\Bashir Aziz\\src\\Components\\Header\\index.jsx":"11"},{"size":207,"mtime":1632872436612,"results":"12","hashOfConfig":"13"},{"size":181,"mtime":1630221857446,"results":"14","hashOfConfig":"13"},{"size":561,"mtime":1635836086369,"results":"15","hashOfConfig":"13"},{"size":65258,"mtime":1638852941389,"results":"16","hashOfConfig":"13"},{"size":24872,"mtime":1633458498057,"results":"17","hashOfConfig":"13"},{"size":1145,"mtime":1632878827498,"results":"18","hashOfConfig":"13"},{"size":7092,"mtime":1635922181045,"results":"19","hashOfConfig":"13"},{"size":265,"mtime":1635848526468,"results":"20","hashOfConfig":"13"},{"size":1104,"mtime":1635565535661,"results":"21","hashOfConfig":"13"},{"size":653,"mtime":1638146037380,"results":"22","hashOfConfig":"13"},{"size":5736,"mtime":1638145998326,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"idoztm",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":1,"fatalErrorCount":0,"warningCount":43,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"26"},"H:\\React Current Project\\Bashir Aziz\\src\\index.js",[],["53","54"],"H:\\React Current Project\\Bashir Aziz\\src\\App.js",[],"H:\\React Current Project\\Bashir Aziz\\src\\config\\router.js",["55","56","57","58"],"import React, { useState, useEffect } from \"react\"\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport Home from '../Pages/Home';\r\nimport About from \"../Pages/About\";\r\nimport Actual from \"../Pages/Actual\";\r\nimport Login from \"../Pages/Login\";\r\n\r\nfunction AppRouter() {\r\n\r\n    return (\r\n        <Router>\r\n            <Route exact path=\"/\" component={Actual} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route exact path=\"/v2\" component={Actual} />\r\n        </Router>\r\n    )\r\n}\r\nexport default AppRouter;","H:\\React Current Project\\Bashir Aziz\\src\\Pages\\Actual\\index.jsx",["59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102"],"H:\\React Current Project\\Bashir Aziz\\src\\Pages\\Home\\index.jsx",["103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124"],"import React, { useEffect, useState } from \"react\";\r\nimport Header from \"../../Components/Header\";\r\nimport NavHheader from \"../../Components/NavHeader\";\r\n//Setting the use history hook\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\n\r\n//Importing Firebase \r\nimport firebase from \"../../firebase\";\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Home = () => {\r\n    const [availableOptions, setAvailableOptions] = useState(['Cash - Operating Account',\r\n        'Cash - Payroll Account',\r\n        'Cash - Money Market Account',\r\n        'Cash - User Defined1',\r\n        'Cash - User Defined2',\r\n        'Cash - User Defined3',\r\n        'Cash - Petty Cash']);\r\n    const [currentOption, setCurrentOption] = useState(\"\");\r\n    const [option, setOption] = useState(\"\");\r\n\r\n    //The debit state\r\n    const [debit, setDebit] = useState(0);\r\n    const [credit, setCredit] = useState(0);\r\n\r\n    //Available Debits\r\n    const [availableDebits, setAvailableDebits] = useState([]);\r\n    const [availableCredits, setAvailableCredits] = useState([]);\r\n\r\n    const history = useHistory();\r\n    // const location = useLocation();\r\n    // const { pathname } = location;\r\n    useEffect(() => {\r\n\r\n        //////////////////////////////////////////////////////////////////////////////////////////Retreiving firebase data from web\r\n        // Now retreiving the data\r\n        //////////////////////////////Here all data retreiving is working////////////////////////////\r\n        // const db = firebase.firestore();\r\n        // //Data Retreiving for Auth\r\n        // db.collection(`Languages`)\r\n        //     .get()\r\n        //     .then(snapshot => {\r\n        //         let data = [];\r\n        //         snapshot.forEach(element => {\r\n        //             data.push(Object.assign({\r\n        //                 \"id\": element.id,\r\n        //                 \"translation\": element.translation\r\n        //             }, element.data()))\r\n        //         })\r\n\r\n        //         const language_array = [];\r\n\r\n        //         for (let i = 0; i < data.length; i++) {\r\n        //             //console.log(data[i].translation.description.short_name);\r\n        //             let language_label = data[i].translation.description.short_name;\r\n        //             language_array.push(language_label);\r\n        //         }\r\n        //         console.log(language_array);\r\n        //         console.log(`data for current selected user `, convertArrayToObject(data, 1));\r\n        //     })\r\n        //////////////////////////////////////////////////////////////////////////////////////////Retreiving firebase data from web\r\n    })\r\n\r\n    const pushAvailableOptions = () => {\r\n        //Either I have to insert the new element or not.I will check if already a option present it cant be inserted again.\r\n        let insert = true;\r\n        for (let i = 0; i < availableOptions.length; i++) {\r\n            if (option == availableOptions[i]) {\r\n                insert = false;\r\n                break;\r\n            }\r\n        }\r\n        if (!insert) {\r\n            alert(`Please insert a Unique Value. '${option}' is already present.`);\r\n        }\r\n        if (option != \"\" && insert == true) {\r\n            setAvailableOptions([...availableOptions, option]);\r\n            setOption(\"\");\r\n        }\r\n        if (option == \"\") {\r\n            alert(\"Please enter any text to submit!\");\r\n        }\r\n    }\r\n\r\n    const pushAvailableDebits = () => {\r\n        if (debit != 0 && currentOption != \"\") {\r\n            let obj = {\r\n                selectedOption: currentOption,\r\n                Debit: debit\r\n            }\r\n            setAvailableDebits([...availableDebits, obj]);\r\n            setDebit(0);\r\n        }\r\n        if (debit == 0) {\r\n            alert(\"Please enter any debit value to submit!\");\r\n        }\r\n        if (currentOption == \"\") {\r\n            alert(\"Please select an option also from the above drop down to submit debit value.\")\r\n        }\r\n    }\r\n\r\n    const pushAvailableCredits = () => {\r\n        if (credit != 0 && currentOption != \"\") {\r\n            let obj = {\r\n                selectedOption: currentOption,\r\n                Credit: credit\r\n            }\r\n            setAvailableCredits([...availableCredits, obj]);\r\n            setCredit(0);\r\n        }\r\n        if (credit == 0) {\r\n            alert(\"Please enter any Credit value to submit!\");\r\n        }\r\n        if (currentOption == \"\") {\r\n            alert(\"Please select an option also from the above drop down to submit Credit value.\")\r\n        }\r\n    }\r\n\r\n    function arrayRemove(arr, value) {\r\n        return arr.filter(function (ele) {\r\n            return ele != value;\r\n        });\r\n    }\r\n\r\n    const deleteItem = (key) => {\r\n        // alert(key);\r\n        let arr = availableOptions;\r\n        //arr.splice(key, 1);\r\n        let value = arr[key];\r\n        //setAvailableOptions([]);\r\n        //const new_arr = arr;\r\n        var result = arrayRemove(arr, value);\r\n        console.log(\"Available Options is : \", result);\r\n        setAvailableOptions(result);\r\n        // if (window.confirm(`Are you sure you want to delete the element ${availableOptions[key]} at number ${key + 1}`)) {\r\n        //     condition = true;\r\n        //     console.log(\"Available Options is : \", arr);\r\n        // } else {\r\n        //     console.log(\"User canceled deletion!\");\r\n        // }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <NavHheader />\r\n            <hr />\r\n            <div className=\"container-own\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                        {/* Tab navs */}\r\n                        <div className=\"nav flex-column nav-tabs text-center\" id=\"v-tabs-tab\" role=\"tablist\" aria-orientation=\"vertical\">\r\n                            <a className=\"nav-link active\" id=\"v-tabs-home-tab\" data-mdb-toggle=\"tab\" href=\"#v-tabs-home\" role=\"tab\" aria-controls=\"v-tabs-home\" aria-selected=\"true\">Add Values</a>\r\n                            <a className=\"nav-link\" id=\"v-tabs-profile-tab\" data-mdb-toggle=\"tab\" href=\"#v-tabs-profile\" role=\"tab\" aria-controls=\"v-tabs-profile\" aria-selected=\"false\">Caclulate</a>\r\n                        </div>\r\n                        {/* Tab navs */}\r\n                    </div>\r\n                    <div className=\"col-9 border\">\r\n                        {/* Tab content */}\r\n                        <div className=\"tab-content\" id=\"v-tabs-tabContent\">\r\n                            <div className=\"tab-pane fade show active\" id=\"v-tabs-home\" role=\"tabpanel\" aria-labelledby=\"v-tabs-home-tab\">\r\n                                <h3 className=\"text-warning mt-3 mb-3\">Enter the Value for the drop down : -</h3>\r\n                                {/* The Drop down for selecting the option  */}\r\n                                <input placeholder=\"Enter any text eg: 'A value' \" className=\"form-control txt-field\" value={option} onChange={(e) => setOption(e.target.value)} type=\"text\" />\r\n                                <br />\r\n                                <button className=\"btn btn-primary btn-lg btn-push\" onClick={() => pushAvailableOptions()}>Add</button>\r\n                                <br />\r\n                                <br />\r\n\r\n                                {(availableOptions == \"\") ? (\r\n                                    <h4 className=\"text-danger mb-4\">Currently there are no values in drop down.Enter any value to be appeared in dropdown.</h4>\r\n                                ) : (\r\n                                    <div className=\"table-responsive container\">\r\n                                        <table className=\"table table-bordered\">\r\n                                            {\r\n                                                availableOptions.map((v, i) => {\r\n                                                    return <tbody key={i}>\r\n                                                        {(i == 0) ? (\r\n                                                            <tr>\r\n                                                                <th>\r\n                                                                    <h3>#</h3>\r\n                                                                </th>\r\n                                                                <th>\r\n                                                                    <h4 className=\"text-success\">DropDown Values</h4>\r\n                                                                </th>\r\n                                                                <th>\r\n                                                                    <h4 className=\"text-warning\">EDIT</h4>\r\n                                                                </th>\r\n                                                                <th>\r\n                                                                    <h4 className=\"text-danger\">\r\n                                                                        Delete\r\n                                                                    </h4>\r\n                                                                </th>\r\n                                                            </tr>\r\n                                                        ) : (\r\n                                                            <></>\r\n                                                        )}\r\n\r\n                                                        <tr>\r\n                                                            <td>\r\n                                                                <h4>{i + 1})</h4>\r\n                                                            </td>\r\n                                                            <td><h3>{v}</h3></td>\r\n                                                            <td>\r\n                                                                <button className=\"btn btn-warning\">Edit</button>\r\n                                                            </td>\r\n                                                            <td>\r\n                                                                <button onClick={() => deleteItem(i)} className=\"btn btn-danger\">Delete</button>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                })\r\n                                            }\r\n                                        </table>\r\n                                    </div>\r\n                                )}\r\n\r\n                                {/* The Drop down for selecting the option */}\r\n                            </div>\r\n                            <div className=\"tab-pane fade\" id=\"v-tabs-profile\" role=\"tabpanel\" aria-labelledby=\"v-tabs-profile-tab\">\r\n                                <br />\r\n                                <h4 className=\"text-dark text-head\">Select the account name from the drop down list located below\r\n                                    <p className=\"text-danger text-bold text-center mt-4\"> <b>OR</b></p> Input desired account names by navigating to the Add Values Tab located on the left side bar:\r\n                                    {/* :  <span className=\"text-danger ml-4\">*</span></h4> */}\r\n                                </h4>\r\n                                <div className=\"input-group input-group-md category_select txt-field\">\r\n                                    <span className=\"input-group-addon glyphicon glyphicon-search\" id=\"sizing-addon2\"></span>\r\n                                    <select style={{ fontSize: \"15px\", width: \"200px\" }} value={currentOption}\r\n                                        onChange={(e) => setCurrentOption(e.target.value)} className=\"form-control\">\r\n                                        {[\"No Selected Value\", ...availableOptions].map((v, i) => {\r\n                                            return <option value={v} key={i}>\r\n                                                {v}\r\n                                            </option>\r\n                                        })}\r\n                                    </select>\r\n                                </div>\r\n                                <hr />\r\n\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <h3 className=\"text-primary mt-3 mb-3\">Debit Amount : -</h3>\r\n                                            {/* The Drop down for selecting the option  */}\r\n                                            <input type=\"number\" placeholder=\"Enter any debit amount eg: '100' \" className=\"form-control txt-field\" value={debit} onChange={(e) => setDebit(e.target.value)} />\r\n                                            <br />\r\n                                            <button className=\"btn btn-primary btn-push\" onClick={() => pushAvailableDebits()}>Add Debit Amount</button>\r\n                                            <br />\r\n                                            <br />\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <h3 className=\"text-primary mt-3 mb-3\">Credit Amount : -</h3>\r\n                                            {/* The Drop down for selecting the option  */}\r\n                                            <input type=\"number\" placeholder=\"Enter any credit amount eg: '10' \" className=\"form-control txt-field\" value={credit} onChange={(e) => setCredit(e.target.value)} />\r\n                                            <br />\r\n                                            <button className=\"btn btn-primary btn-push\" onClick={() => pushAvailableCredits()}>Add Credit Amount</button>\r\n                                            <br />\r\n                                            <br />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <hr />\r\n\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"table-responsive\">\r\n                                                <table className=\"table table-bordered\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th colSpan={3}>\r\n                                                                <h2 className=\"text-bold\"><i className=\"fas fa-list-alt fa-lg mr-3 text-success\"></i>&nbsp;&nbsp; Debit Card</h2>\r\n                                                                <h6><span className=\"text-success\">The amount in Debit Card in different sections</span> </h6>\r\n                                                            </th>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <th> <h2 className=\"text-center\">#</h2> </th>\r\n                                                            <th scope=\"col\"><h2>Amounts</h2></th>\r\n                                                            <th scope=\"col\"><h2>Edit</h2></th>\r\n                                                            {/* <th scope=\"col\">Priority</th>\r\n                                                <th scope=\"col\">Status</th> */}\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <>\r\n                                                        {/* This matters */}\r\n                                                        {availableOptions.map((s, i) => {\r\n                                                            return <tbody key={i}>\r\n                                                                <tr>\r\n                                                                    <th scope=\"row\" colSpan={3}><h4>{i + 1} - &nbsp; {s}</h4></th>\r\n                                                                </tr>\r\n                                                                {(availableDebits.length == 0) ? (\r\n                                                                    <tr>\r\n                                                                        {/* <th scope=\"row\"><i className=\"far fa-check-circle fa-lg\"></i>&nbsp;&nbsp;</th>\r\n                                                                        <td>&nbsp;&nbsp;</td>\r\n                                                                        <td>&nbsp;&nbsp;</td> */}\r\n                                                                        {/* <td>&nbsp;&nbsp;</td>\r\n                                                            <td>&nbsp;&nbsp;</td> */}\r\n                                                                    </tr>\r\n                                                                ) : (\r\n                                                                    availableDebits.map((v, j) => {\r\n                                                                        return <tr key={j}>\r\n                                                                            {(v.selectedOption == s) ? (\r\n                                                                                <>\r\n                                                                                    <th scope=\"row\" className=\"text-center w-fit-content text-bold\"><h4>{(j + 1)})</h4></th>\r\n\r\n                                                                                    <td>\r\n                                                                                        <h4 className=\"text-success mt-2 text-center text-bold\">{v.Debit}</h4>\r\n                                                                                    </td>\r\n\r\n                                                                                    <td className=\"text-center\"><button type=\"button\" className=\"btn btn-warning\">Edit</button></td>\r\n                                                                                </>\r\n                                                                            ) : (\r\n                                                                                <></>\r\n                                                                            )}\r\n                                                                        </tr>\r\n                                                                    })\r\n                                                                )}\r\n                                                            </tbody>\r\n                                                        })}\r\n                                                        {/* This matters */}\r\n                                                    </>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"table-responsive\">\r\n                                                <table className=\"table table-bordered\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th colSpan={3}>\r\n                                                                <h2 className=\"text-bold\"><i className=\"fas fa-list-alt fa-lg mr-3 text-danger\"></i>&nbsp;&nbsp; Credit Card</h2>\r\n                                                                <h6><span className=\"text-danger\">The amount in Credit Card in different sections</span> </h6>\r\n                                                            </th>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <th> <h2 className=\"text-center\">#</h2> </th>\r\n                                                            <th scope=\"col\"><h2>Amounts</h2></th>\r\n                                                            <th scope=\"col\"><h2>Edit</h2></th>\r\n                                                            {/* <th scope=\"col\">Priority</th>\r\n                                                <th scope=\"col\">Status</th> */}\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <>\r\n                                                        {/* This matters */}\r\n                                                        {availableOptions.map((s, i) => {\r\n                                                            return <tbody key={i}>\r\n                                                                <tr>\r\n                                                                    <th scope=\"row\" colSpan={3}><h4>{i + 1} - &nbsp; {s}</h4></th>\r\n                                                                </tr>\r\n                                                                {(availableCredits.length == 0) ? (\r\n                                                                    <tr>\r\n                                                                        {/* <th scope=\"row\"><i className=\"far fa-check-circle fa-lg\"></i>&nbsp;&nbsp;</th>\r\n                                                                        <td>&nbsp;&nbsp;</td>\r\n                                                                        <td>&nbsp;&nbsp;</td> */}\r\n                                                                        {/* <td>&nbsp;&nbsp;</td>\r\n                                                                        <td>&nbsp;&nbsp;</td> */}\r\n                                                                    </tr>\r\n                                                                ) : (\r\n                                                                    availableCredits.map((v, j) => {\r\n                                                                        return <tr key={j}>\r\n                                                                            {(v.selectedOption == s) ? (\r\n                                                                                <>\r\n                                                                                    <th scope=\"row\" className=\"text-center w-fit-content text-bold\"><h4>{(j + 1)})</h4></th>\r\n\r\n                                                                                    <td>\r\n                                                                                        <h4 className=\"text-danger text-bold\">{v.Credit}</h4>\r\n                                                                                    </td>\r\n\r\n                                                                                    <td><button type=\"button\" className=\"btn btn-warning\">Edit</button></td>\r\n                                                                                </>\r\n                                                                            ) : (\r\n                                                                                <></>\r\n                                                                            )}\r\n                                                                        </tr>\r\n                                                                    })\r\n                                                                )}\r\n                                                            </tbody>\r\n                                                        })}\r\n                                                        {/* This matters */}\r\n                                                    </>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* Tab content */}\r\n                    </div>\r\n                </div>\r\n            </div >\r\n            <hr />\r\n            <br />\r\n        </>\r\n    )\r\n}\r\nexport default Home;\r\n","H:\\React Current Project\\Bashir Aziz\\src\\Pages\\About\\index.jsx",["125","126","127","128"],"import React, { useEffect, useState } from \"react\";\r\nimport Header from \"../../Components/Header\";\r\nimport NavHheader from \"../../Components/NavHeader\";\r\n//Setting the use history hook\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\n\r\n\r\nconst About = () => {\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <NavHheader />\r\n            <hr />\r\n            <h1 className=\"text-danger container\">About Us</h1>\r\n            <hr />\r\n            <div className=\"container mt-4 border\">\r\n                <hr />\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            Lorem ipsum dolor sit, amet consectetur adipisicing elit. Odio excepturi modi doloremque, doloribus voluptates eveniet praesentium temporibus saepe maiores possimus eos deserunt repellat vel sequi magnam nihil quis ea exercitationem.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br />\r\n        </>\r\n    )\r\n}\r\nexport default About;\r\n","H:\\React Current Project\\Bashir Aziz\\src\\Pages\\Login\\index.jsx",["129","130","131","132","133","134","135"],"import React, { useState, useEffect } from 'react'\r\n\r\nimport firebase from '../../firebase/index';\r\nimport firebaseAuth from 'firebase/auth';\r\nimport history from \"../../history\";\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport \"firebase/firestore\"\r\nimport \"./style.scss\";\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      show: false,\r\n      isSignedIn: false,\r\n    }\r\n  }\r\n\r\n  uiConfig = {\r\n    signInFlow: \"popup\",\r\n    signInOptions: [\r\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n    ],\r\n    callbacks: {\r\n      signInSuccessWithAuthResult: () => false\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n\r\n    // firebase.firestore().collection('things')\r\n    //   .get()\r\n    //   .then(snapshot => {\r\n    //     let data = [];\r\n    //     snapshot.forEach(element => {\r\n    //       data.push(Object.assign({\r\n    //         id: element.id\r\n    //       }, element.data()))\r\n    //     })\r\n    //     console.log(\"data=> \", data)\r\n    //   }).catch(err => {\r\n    //     console.log(err)\r\n    //   })\r\n\r\n\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      // this.setState({ isSignedIn: !!user })\r\n      // console.log(\"user\", user)\r\n\r\n      console.log(\"User Type is equal to : \",typeof user);\r\n\r\n      // var positiono = {};\r\n      // if ('geolocation' in navigator) {\r\n      //   // console.log(\"Geolocation is Available\");\r\n      //   navigator.geolocation.getCurrentPosition((position) => {\r\n      //     positiono = position\r\n      //     //  console.log(\"Latitude==>\",position.coords.latitude);\r\n      //     //  console.log(\"Longitude==>\",position.coords.longitude);\r\n      //   })\r\n      // }\r\n      // else {\r\n      //   alert(\"Geolocation is not supported by this browser.\");\r\n      // }\r\n\r\n      this.setState({ \r\n        isSignedIn: !!user,\r\n        user_data:user\r\n       })\r\n      // console.log(\"user\", user)\r\n\r\n      if (this.state.isSignedIn == true) {\r\n      }\r\n      else {\r\n        console.log(\"Not signed in\")\r\n      }\r\n    })\r\n\r\n    //console.log(\"User_Data==> \", user.providerData[0])\r\n    //   console.log(\"Simple User===>\",this.state.user_data);\r\n  }\r\n\r\n  componentDidUpdate = () => {\r\n    console.log(this.state.isSignedIn)\r\n  }\r\n\r\n  // googleSignin = () => {\r\n  //   const auth = firebase.auth();\r\n\r\n  //   auth.signInWithPopup(provider)\r\n  //     .then((result) => {\r\n  //       var credential = result.credential;\r\n\r\n  //       // This gives you a Google Access Token. You can use it to access the Google API.\r\n  //       var token = credential.accessToken;\r\n  //       // The signed-in user info.\r\n  //       var user = result.user;\r\n  //       alert(user)\r\n  //       // ...\r\n  //     }).catch((error) => {\r\n  //       // Handle Errors here.\r\n  //       var errorCode = error.code;\r\n  //       var errorMessage = error.message;\r\n  //       // The email of the user's account used.\r\n  //       var email = error.email;\r\n  //       // The firebase.auth.AuthCredential type that was used.\r\n  //       var credential = error.credential;\r\n  //       // ...\r\n  //     });\r\n\r\n  //   // auth.onAuthStateChanged(user => {\r\n  //   //   if (user) {\r\n  //   //     alert(\"Signed in successfully==> \", user.displayName);\r\n\r\n  //   //   } else {\r\n  //   //     console.log('Not signed in');\r\n  //   //   }\r\n  //   // });\r\n  // }\r\n  render() {\r\n    if (this.state.isSignedIn == true) {\r\n      const pathname = window.location.pathname;\r\n      console.log(\"Path name is equal to : \",pathname)\r\n      if (pathname === '/login') {\r\n        if (this.state.user_data.email != \"\") {\r\n          //Sending the data\r\n          const db = firebase.firestore();\r\n          let email = this.state.user_data.email;\r\n          let name = this.state.user_data.displayName;\r\n          let photoUrl = this.state.user_data.photoURL;\r\n\r\n          const userData = {\r\n            Name:name,\r\n            Email:email,\r\n            Photo:photoUrl\r\n          }\r\n\r\n         \r\n\r\n          let thingsRef = db.collection(`Users/Bio/${email}`);\r\n          console.log(\"The user data is equal to : \",userData)\r\n          \r\n          thingsRef.add(userData).then(() => {\r\n            // console.log(\"Data Sent Successfully\");\r\n             alert(\"Data Sent Successfully.\")\r\n          })\r\n          //alert(\"Move to main\")\r\n          //Sending the data\r\n          // Router.push('/main')'\r\n          //Pushing to the main page\r\n          this.props.history.push('/');\r\n\r\n        }\r\n      }\r\n    }\r\n    return (\r\n      <div>\r\n        <main id=\"homeMainBody\">\r\n          <h1 className=\"bg-light text-center headingstaff text-primary bg-light mt-3\">REACT ACCOUNTING</h1>\r\n          <section className=\"login-block\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-12\">\r\n                  <form className=\"md-float-material form-material\" action=\"#\" method=\"POST\">\r\n                    <div className=\"auth-box card\">\r\n                      <div className=\"card-block\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-md-12\">\r\n                            <h3 className=\"text-center heading\">REACT ACCOUNTING</h3>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"or-container\">\r\n                          <div className=\"line-separator\" />\r\n                          {/* <div className=\"or-label\">or</div> */}\r\n                          <h5>Login</h5>\r\n                          <div className=\"line-separator\" />\r\n                        </div>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-md-12\">\r\n                            {(this.state.isSignedIn) ? (\r\n                              <>\r\n                                <div className=\"text-center\">\r\n                                  <div id=\"loader\"></div>\r\n                                </div>\r\n                                <br />\r\n                                <div className=\"animate-bottom text-center\">\r\n                                  <h2>You are already signed In</h2>\r\n                                  <p>Please wait you will be re directed to the projects soon......</p>\r\n                                </div>\r\n                              </>\r\n                            ) : (\r\n                              <StyledFirebaseAuth\r\n                                uiConfig={this.uiConfig}\r\n                                firebaseAuth={firebase.auth()}\r\n                              />\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                        <p className=\"text-inverse text-center\">Dont have an account? <i className=\"text-primary\">Click on above sign in button to create account.</i> </p>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </main>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Login;","H:\\React Current Project\\Bashir Aziz\\src\\history.js",[],"H:\\React Current Project\\Bashir Aziz\\src\\firebase\\index.js",[],"H:\\React Current Project\\Bashir Aziz\\src\\Components\\NavHeader\\index.jsx",["136"],"import React from \"react\";\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport \"./style.scss\";\r\n\r\nconst NavHeader = (props) => {\r\n    const history = useHistory();\r\n\r\n    const MoveTo = (path) => {\r\n        // alert(path)\r\n        history.push(`${path}`)\r\n    }\r\n    return (\r\n        <>\r\n            {/* As a heading */}\r\n            <nav className={`NavHeader1`}>\r\n                <div className=\"navTextDiv container-fluid\">\r\n                    <span onClick={() => MoveTo(`/`)} className=\"navheader-text mb-0\">Welcome to T Account</span>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\nexport default NavHeader;","H:\\React Current Project\\Bashir Aziz\\src\\Components\\Header\\index.jsx",["137","138","139","140"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.scss\";\r\nimport firebase from '../../firebase/index';\r\nimport \"firebase/auth\";\r\nconst Header = (props) => {\r\n    const [signedInUserData, setSignedInUserData] = useState({});\r\n    const [status, setStatus] = useState(false);\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                setStatus(true);\r\n                setSignedInUserData(user)\r\n                // console.log(\"...........\",user.uid)\r\n                // loadData();\r\n            }\r\n            else {\r\n                setStatus(false)\r\n                setSignedInUserData(null)\r\n            }\r\n        })\r\n    })\r\n\r\n    const sign_out = () => {\r\n        firebase.auth().signOut().then(() => {\r\n            // Sign-out successful.\r\n            alert(\"Signed Out Successfully\");\r\n            setStatus(false)\r\n\r\n        }).catch((error) => {\r\n            // An error happened.\r\n            console.log(error)\r\n            alert(error);\r\n        });\r\n\r\n    }\r\n    return (\r\n        // <>\r\n        //     <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        //         <div className=\"container-fluid\">\r\n        //             <Link className=\"navbar-brand navbar-text\" to='/'>Accounting</Link>\r\n        //             <button className=\"navbar-toggler\" type=\"button\" data-mdb-toggle=\"collapse\" data-mdb-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        //                 <i className=\"fas fa-bars\" />\r\n        //             </button>\r\n        //             {/* <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        //                 <ul className=\"navbar-nav\">\r\n        //                     <li className=\"nav-item\">\r\n        //                         <Link className=\"nav-link active\" aria-current=\"page\" to='/'>Home</Link>\r\n        //                     </li>\r\n        //                     <li className=\"nav-item\">\r\n        //                         <Link className=\"nav-link\" to={`/about`} tabIndex={-1} aria-disabled=\"true\">About</Link>\r\n        //                     </li>\r\n        //                 </ul>\r\n        //             </div> */}\r\n        //         </div>\r\n        //     </nav>\r\n        // </>\r\n\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            {/* Container wrapper */}\r\n            <div className=\"container\">\r\n                {/* Navbar brand */}\r\n                <a className=\"navbar-brand me-2\">\r\n                    <img src=\"https://w7.pngwing.com/pngs/827/265/png-transparent-task-manager-android-es-datei-explorer-file-manager-android-thumbnail.png\" width={50} alt=\"\" loading=\"lazy\" style={{ marginTop: '-1px' }} />\r\n                </a>\r\n\r\n                {/* Toggle button */}\r\n                <button className=\"navbar-toggler\" type=\"button\" data-mdb-toggle=\"collapse\" data-mdb-target=\"#navbarButtonsExample\" aria-controls=\"navbarButtonsExample\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <i className=\"fas fa-bars\" />\r\n                </button>\r\n                {/* Collapsible wrapper */}\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarButtonsExample\">\r\n                    {/* Left links */}\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li>\r\n                            <h2 className=\"navbar-brand navbar-text\">T Account</h2>\r\n                        </li>\r\n                        {/* Notification dropdown */}\r\n                        <li className=\"nav-item dropdown\">\r\n\r\n                        </li>\r\n                        {/* Notification dropdown */}\r\n                    </ul>\r\n                    {/* Left links */}\r\n                    {(status) ? (\r\n                        <div className=\"d-flex space-evenly\">\r\n                            <div className=\"dropdown\">\r\n                                <a className=\"dropdown-toggle\" role=\"button\" id=\"dropdownMenuLink\" data-mdb-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    <img src={signedInUserData.photoURL} className=\"NavbarUserImage\" alt=\"User Image\" title={signedInUserData.name} />\r\n                                </a>\r\n                                <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\r\n                                    <li className=\"signout\" onClick={sign_out}><a className=\"dropdown-item\">Log Out</a></li>\r\n                                    {/* <li className=\"signout\"><a className=\"dropdown-item\">Admin Page</a></li>\r\n                                    <li className=\"signout\"><a className=\"dropdown-item\">New Project</a></li>\r\n                                    <li className=\"signout\"><a className=\"dropdown-item\">All Project</a></li> */}\r\n                                </ul>\r\n                            </div>\r\n                            <div>\r\n                                <Link to=\"/login\" className=\"nav-link hidden-arrow\" role=\"button\">\r\n                                    <i className=\"fas fa-bell text-dark fa-2x\" />\r\n                                    <span className=\"badge rounded-pill badge-notification bg-danger\">1</span>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <h5 className=\"text-primary\"><Link to=\"/login\">Login</Link></h5>\r\n                    )}\r\n\r\n                </div>\r\n                {/* Collapsible wrapper */}\r\n            </div>\r\n            {/* Container wrapper */}\r\n        </nav>\r\n    )\r\n}\r\nexport default Header;",{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":25},{"ruleId":"145","severity":1,"message":"149","line":1,"column":27,"nodeType":"147","messageId":"148","endLine":1,"endColumn":36},{"ruleId":"145","severity":1,"message":"150","line":4,"column":8,"nodeType":"147","messageId":"148","endLine":4,"endColumn":12},{"ruleId":"145","severity":1,"message":"151","line":5,"column":8,"nodeType":"147","messageId":"148","endLine":5,"endColumn":13},{"ruleId":"145","severity":1,"message":"152","line":5,"column":10,"nodeType":"147","messageId":"148","endLine":5,"endColumn":21},{"ruleId":"145","severity":1,"message":"153","line":101,"column":12,"nodeType":"147","messageId":"148","endLine":101,"endColumn":19},{"ruleId":"145","severity":1,"message":"154","line":114,"column":11,"nodeType":"147","messageId":"148","endLine":114,"endColumn":18},{"ruleId":"155","severity":1,"message":"156","line":149,"column":5,"nodeType":"147","endLine":149,"endColumn":14,"suggestions":"157"},{"ruleId":"158","severity":1,"message":"159","line":198,"column":33,"nodeType":"160","messageId":"161","endLine":198,"endColumn":35},{"ruleId":"158","severity":1,"message":"162","line":243,"column":46,"nodeType":"160","messageId":"161","endLine":243,"endColumn":48},{"ruleId":"145","severity":1,"message":"163","line":257,"column":11,"nodeType":"147","messageId":"148","endLine":257,"endColumn":26},{"ruleId":"145","severity":1,"message":"164","line":276,"column":9,"nodeType":"147","messageId":"148","endLine":276,"endColumn":17},{"ruleId":"158","severity":1,"message":"159","line":294,"column":24,"nodeType":"160","messageId":"161","endLine":294,"endColumn":26},{"ruleId":"158","severity":1,"message":"162","line":302,"column":20,"nodeType":"160","messageId":"161","endLine":302,"endColumn":22},{"ruleId":"158","severity":1,"message":"159","line":302,"column":36,"nodeType":"160","messageId":"161","endLine":302,"endColumn":38},{"ruleId":"145","severity":1,"message":"164","line":320,"column":13,"nodeType":"147","messageId":"148","endLine":320,"endColumn":21},{"ruleId":"158","severity":1,"message":"159","line":340,"column":20,"nodeType":"160","messageId":"161","endLine":340,"endColumn":22},{"ruleId":"158","severity":1,"message":"162","line":346,"column":19,"nodeType":"160","messageId":"161","endLine":346,"endColumn":21},{"ruleId":"158","severity":1,"message":"162","line":346,"column":41,"nodeType":"160","messageId":"161","endLine":346,"endColumn":43},{"ruleId":"158","severity":1,"message":"159","line":372,"column":33,"nodeType":"160","messageId":"161","endLine":372,"endColumn":35},{"ruleId":"158","severity":1,"message":"159","line":381,"column":28,"nodeType":"160","messageId":"161","endLine":381,"endColumn":30},{"ruleId":"158","severity":1,"message":"159","line":405,"column":19,"nodeType":"160","messageId":"161","endLine":405,"endColumn":21},{"ruleId":"158","severity":1,"message":"159","line":409,"column":27,"nodeType":"160","messageId":"161","endLine":409,"endColumn":29},{"ruleId":"158","severity":1,"message":"159","line":413,"column":26,"nodeType":"160","messageId":"161","endLine":413,"endColumn":28},{"ruleId":"158","severity":1,"message":"162","line":435,"column":20,"nodeType":"160","messageId":"161","endLine":435,"endColumn":22},{"ruleId":"158","severity":1,"message":"162","line":435,"column":42,"nodeType":"160","messageId":"161","endLine":435,"endColumn":44},{"ruleId":"158","severity":1,"message":"159","line":448,"column":33,"nodeType":"160","messageId":"161","endLine":448,"endColumn":35},{"ruleId":"158","severity":1,"message":"159","line":478,"column":20,"nodeType":"160","messageId":"161","endLine":478,"endColumn":22},{"ruleId":"158","severity":1,"message":"159","line":482,"column":27,"nodeType":"160","messageId":"161","endLine":482,"endColumn":29},{"ruleId":"158","severity":1,"message":"159","line":486,"column":26,"nodeType":"160","messageId":"161","endLine":486,"endColumn":28},{"ruleId":"158","severity":1,"message":"162","line":494,"column":24,"nodeType":"160","messageId":"161","endLine":494,"endColumn":26},{"ruleId":"145","severity":1,"message":"165","line":498,"column":11,"nodeType":"147","messageId":"148","endLine":498,"endColumn":21},{"ruleId":"145","severity":1,"message":"166","line":517,"column":11,"nodeType":"147","messageId":"148","endLine":517,"endColumn":31},{"ruleId":"145","severity":1,"message":"167","line":519,"column":13,"nodeType":"147","messageId":"148","endLine":519,"endColumn":15},{"ruleId":"168","severity":2,"message":"169","line":581,"column":41,"nodeType":"147","messageId":"170","endLine":581,"endColumn":42},{"ruleId":"158","severity":1,"message":"159","line":613,"column":52,"nodeType":"160","messageId":"161","endLine":613,"endColumn":54},{"ruleId":"158","severity":1,"message":"159","line":621,"column":61,"nodeType":"160","messageId":"161","endLine":621,"endColumn":63},{"ruleId":"158","severity":1,"message":"159","line":648,"column":83,"nodeType":"160","messageId":"161","endLine":648,"endColumn":85},{"ruleId":"158","severity":1,"message":"159","line":648,"column":95,"nodeType":"160","messageId":"161","endLine":648,"endColumn":97},{"ruleId":"158","severity":1,"message":"159","line":655,"column":83,"nodeType":"160","messageId":"161","endLine":655,"endColumn":85},{"ruleId":"158","severity":1,"message":"159","line":655,"column":95,"nodeType":"160","messageId":"161","endLine":655,"endColumn":97},{"ruleId":"158","severity":1,"message":"159","line":780,"column":106,"nodeType":"160","messageId":"161","endLine":780,"endColumn":108},{"ruleId":"158","severity":1,"message":"159","line":791,"column":115,"nodeType":"160","messageId":"161","endLine":791,"endColumn":117},{"ruleId":"158","severity":1,"message":"159","line":847,"column":107,"nodeType":"160","messageId":"161","endLine":847,"endColumn":109},{"ruleId":"158","severity":1,"message":"159","line":861,"column":112,"nodeType":"160","messageId":"161","endLine":861,"endColumn":114},{"ruleId":"171","severity":1,"message":"172","line":870,"column":177,"nodeType":"173","messageId":"174","endLine":870,"endColumn":218},{"ruleId":"158","severity":1,"message":"159","line":973,"column":87,"nodeType":"160","messageId":"161","endLine":973,"endColumn":89},{"ruleId":"158","severity":1,"message":"162","line":1001,"column":75,"nodeType":"160","messageId":"161","endLine":1001,"endColumn":77},{"ruleId":"145","severity":1,"message":"152","line":5,"column":10,"nodeType":"147","messageId":"148","endLine":5,"endColumn":21},{"ruleId":"145","severity":1,"message":"175","line":8,"column":8,"nodeType":"147","messageId":"148","endLine":8,"endColumn":16},{"ruleId":"145","severity":1,"message":"154","line":33,"column":11,"nodeType":"147","messageId":"148","endLine":33,"endColumn":18},{"ruleId":"158","severity":1,"message":"159","line":71,"column":24,"nodeType":"160","messageId":"161","endLine":71,"endColumn":26},{"ruleId":"158","severity":1,"message":"162","line":79,"column":20,"nodeType":"160","messageId":"161","endLine":79,"endColumn":22},{"ruleId":"158","severity":1,"message":"159","line":79,"column":36,"nodeType":"160","messageId":"161","endLine":79,"endColumn":38},{"ruleId":"158","severity":1,"message":"159","line":83,"column":20,"nodeType":"160","messageId":"161","endLine":83,"endColumn":22},{"ruleId":"158","severity":1,"message":"162","line":89,"column":19,"nodeType":"160","messageId":"161","endLine":89,"endColumn":21},{"ruleId":"158","severity":1,"message":"162","line":89,"column":41,"nodeType":"160","messageId":"161","endLine":89,"endColumn":43},{"ruleId":"158","severity":1,"message":"159","line":97,"column":19,"nodeType":"160","messageId":"161","endLine":97,"endColumn":21},{"ruleId":"158","severity":1,"message":"159","line":100,"column":27,"nodeType":"160","messageId":"161","endLine":100,"endColumn":29},{"ruleId":"158","severity":1,"message":"162","line":106,"column":20,"nodeType":"160","messageId":"161","endLine":106,"endColumn":22},{"ruleId":"158","severity":1,"message":"162","line":106,"column":42,"nodeType":"160","messageId":"161","endLine":106,"endColumn":44},{"ruleId":"158","severity":1,"message":"159","line":114,"column":20,"nodeType":"160","messageId":"161","endLine":114,"endColumn":22},{"ruleId":"158","severity":1,"message":"159","line":117,"column":27,"nodeType":"160","messageId":"161","endLine":117,"endColumn":29},{"ruleId":"158","severity":1,"message":"162","line":124,"column":24,"nodeType":"160","messageId":"161","endLine":124,"endColumn":26},{"ruleId":"158","severity":1,"message":"159","line":173,"column":52,"nodeType":"160","messageId":"161","endLine":173,"endColumn":54},{"ruleId":"158","severity":1,"message":"159","line":181,"column":61,"nodeType":"160","messageId":"161","endLine":181,"endColumn":63},{"ruleId":"158","severity":1,"message":"159","line":294,"column":90,"nodeType":"160","messageId":"161","endLine":294,"endColumn":92},{"ruleId":"158","severity":1,"message":"159","line":305,"column":96,"nodeType":"160","messageId":"161","endLine":305,"endColumn":98},{"ruleId":"158","severity":1,"message":"159","line":353,"column":91,"nodeType":"160","messageId":"161","endLine":353,"endColumn":93},{"ruleId":"158","severity":1,"message":"159","line":364,"column":96,"nodeType":"160","messageId":"161","endLine":364,"endColumn":98},{"ruleId":"145","severity":1,"message":"149","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":26},{"ruleId":"145","severity":1,"message":"146","line":1,"column":28,"nodeType":"147","messageId":"148","endLine":1,"endColumn":36},{"ruleId":"145","severity":1,"message":"152","line":5,"column":10,"nodeType":"147","messageId":"148","endLine":5,"endColumn":21},{"ruleId":"145","severity":1,"message":"154","line":9,"column":11,"nodeType":"147","messageId":"148","endLine":9,"endColumn":18},{"ruleId":"145","severity":1,"message":"146","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":25},{"ruleId":"145","severity":1,"message":"149","line":1,"column":27,"nodeType":"147","messageId":"148","endLine":1,"endColumn":36},{"ruleId":"145","severity":1,"message":"176","line":4,"column":8,"nodeType":"147","messageId":"148","endLine":4,"endColumn":20},{"ruleId":"145","severity":1,"message":"177","line":5,"column":8,"nodeType":"147","messageId":"148","endLine":5,"endColumn":15},{"ruleId":"158","severity":1,"message":"159","line":71,"column":33,"nodeType":"160","messageId":"161","endLine":71,"endColumn":35},{"ruleId":"158","severity":1,"message":"159","line":120,"column":31,"nodeType":"160","messageId":"161","endLine":120,"endColumn":33},{"ruleId":"158","severity":1,"message":"162","line":124,"column":40,"nodeType":"160","messageId":"161","endLine":124,"endColumn":42},{"ruleId":"145","severity":1,"message":"152","line":2,"column":22,"nodeType":"147","messageId":"148","endLine":2,"endColumn":33},{"ruleId":"178","severity":1,"message":"179","line":64,"column":17,"nodeType":"180","endLine":64,"endColumn":50},{"ruleId":"178","severity":1,"message":"179","line":89,"column":33,"nodeType":"180","endLine":89,"endColumn":149},{"ruleId":"181","severity":1,"message":"182","line":90,"column":37,"nodeType":"180","endLine":90,"endColumn":151},{"ruleId":"178","severity":1,"message":"179","line":93,"column":80,"nodeType":"180","endLine":93,"endColumn":109},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Home' is defined but never used.","'About' is defined but never used.","'useLocation' is defined but never used.","'loading' is assigned a value but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setTotalCredit'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [alertManual, status, availableOptions, signedInUserData, initial, firestoreData.length] as a second argument to the useEffect Hook.",["185"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'addDropdownData' is assigned a value but never used.","'dateTime' is assigned a value but never used.","'deleteItem' is assigned a value but never used.","'changeSelectedOption' is assigned a value but never used.","'aO' is assigned a value but never used.","no-undef","'i' is not defined.","undef","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'firebase' is defined but never used.","'firebaseAuth' is defined but never used.","'history' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},"Add dependencies array: [alertManual, status, availableOptions, signedInUserData, initial, firestoreData.length]",{"range":"188","text":"189"},[10626,10626],", [alertManual, status, availableOptions, signedInUserData, initial, firestoreData.length]"]